{"version":"NotebookV1","origId":843068537729743,"name":"Spark DataFrames Project Exercise-checkpoint","language":"python","commands":[{"version":"CommandV1","origId":843068537729744,"guid":"2e34a745-6830-4b7c-a8aa-381464f3835a","subtype":"command","commandType":"auto","position":1.0,"command":"%md # Spark DataFrames Project Exercise ","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"637d063c-80b1-4ada-975f-daf081938822"},{"version":"CommandV1","origId":843068537729745,"guid":"3470c5ee-c112-40fc-9924-a01d1646e10f","subtype":"command","commandType":"auto","position":2.0,"command":"%md Let's get some quick practice with your new Spark DataFrame skills, you will be asked some basic questions about some stock market data, in this case Walmart Stock from the years 2012-2017. This exercise will just ask a bunch of questions, unlike the future machine learning exercises, which will be a little looser and be in the form of \"Consulting Projects\", but more on that later!\n\nFor now, just answer the questions and complete the tasks below.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"0c742fea-b969-4491-b57a-2f3b3715185f"},{"version":"CommandV1","origId":843068537729746,"guid":"c267ba69-7da4-4c95-b13a-a493474f02c5","subtype":"command","commandType":"auto","position":3.0,"command":"%md #### Use the walmart_stock.csv file to Answer and complete the  tasks below!","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"1bad3c9f-dc11-4f16-a98a-d97af3fad912"},{"version":"CommandV1","origId":843068537729747,"guid":"1ee2f3e3-4e6e-448e-80e8-7d91ec79ca82","subtype":"command","commandType":"auto","position":4.0,"command":"%md #### Start a simple Spark Session","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"8378f3c6-37a1-4023-a514-993120be9d6c"},{"version":"CommandV1","origId":843068537729748,"guid":"9675637b-3bc8-456d-b5ef-1944c596c44c","subtype":"command","commandType":"auto","position":5.0,"command":"from pyspark.sql import  SparkSession\nimport pyspark\nspark = SparkSession.builder.appName(\"Spark DataFrame Project Exercise\").getOrCreate()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">ImportError</span>: No module named spark.sql","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">ImportError</span>                               Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729748&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span><span class=\"ansigreen\">from</span> spark<span class=\"ansiyellow\">.</span>sql <span class=\"ansigreen\">import</span>  SparkSession<span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      2</span> <span class=\"ansigreen\">import</span> pyspark<span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      3</span> spark <span class=\"ansiyellow\">=</span> SparkSession<span class=\"ansiyellow\">.</span>builder<span class=\"ansiyellow\">.</span>appName<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&quot;Spark DataFrame Project Exercise&quot;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>getOrCreate<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">ImportError</span>: No module named spark.sql</div>","workflows":[],"startTime":1514759905263,"submitTime":1514759905242,"finishTime":1514759905341,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":true},"streamStates":{},"nuid":"8d3b8ec0-a59c-4df0-b508-10fa24bc4a45"},{"version":"CommandV1","origId":843068537729749,"guid":"fe248fa1-8d8c-4311-a63c-f37c89b9955b","subtype":"command","commandType":"auto","position":6.0,"command":"%md #### Load the Walmart Stock CSV File, have Spark infer the data types.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"af8ac913-ee9f-43e1-a6ea-4af2fe3833f7"},{"version":"CommandV1","origId":843068537729750,"guid":"1b88d528-1ae0-45c0-bf49-83d2f6ee47c9","subtype":"command","commandType":"auto","position":7.0,"command":"df = spark.read.csv('/FileStore/tables/walmart_stock.csv', header=True, inferSchema=True)\ndf.show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------------------+------------------+------------------+------------------+------------------+--------+------------------+\n|               Date|              Open|              High|               Low|             Close|  Volume|         Adj Close|\n+-------------------+------------------+------------------+------------------+------------------+--------+------------------+\n|2012-01-03 00:00:00|         59.970001|         61.060001|         59.869999|         60.330002|12668800|52.619234999999996|\n|2012-01-04 00:00:00|60.209998999999996|         60.349998|         59.470001|59.709998999999996| 9593300|         52.078475|\n|2012-01-05 00:00:00|         59.349998|         59.619999|         58.369999|         59.419998|12768200|         51.825539|\n|2012-01-06 00:00:00|         59.419998|         59.450001|         58.869999|              59.0| 8069400|          51.45922|\n|2012-01-09 00:00:00|         59.029999|         59.549999|         58.919998|             59.18| 6679300|51.616215000000004|\n|2012-01-10 00:00:00|             59.43|59.709998999999996|             58.98|59.040001000000004| 6907300|         51.494109|\n|2012-01-11 00:00:00|         59.060001|         59.529999|59.040001000000004|         59.400002| 6365600|         51.808098|\n|2012-01-12 00:00:00|59.790001000000004|              60.0|         59.400002|              59.5| 7236400|51.895315999999994|\n|2012-01-13 00:00:00|             59.18|59.610001000000004|59.009997999999996|59.540001000000004| 7729300|51.930203999999996|\n|2012-01-17 00:00:00|         59.869999|60.110001000000004|             59.52|         59.849998| 8500000|         52.200581|\n|2012-01-18 00:00:00|59.790001000000004|         60.029999|         59.650002|60.009997999999996| 5911400|         52.340131|\n|2012-01-19 00:00:00|             59.93|             60.73|             59.75|60.610001000000004| 9234600|         52.863447|\n|2012-01-20 00:00:00|             60.75|             61.25|         60.669998|61.009997999999996|10378800|53.212320999999996|\n|2012-01-23 00:00:00|         60.810001|             60.98|60.509997999999996|             60.91| 7134100|         53.125104|\n|2012-01-24 00:00:00|             60.75|              62.0|             60.75|61.389998999999996| 7362800| 53.54375400000001|\n|2012-01-25 00:00:00|             61.18|61.610001000000004|61.040001000000004|         61.470001| 5915800| 53.61353100000001|\n|2012-01-26 00:00:00|         61.799999|             61.84|             60.77|         60.970001| 7436200|         53.177436|\n|2012-01-27 00:00:00|60.860001000000004|         61.119999|60.540001000000004|60.709998999999996| 6287300|         52.950665|\n|2012-01-30 00:00:00|         60.470001|             61.32|         60.349998|         61.299999| 7636900|53.465256999999994|\n|2012-01-31 00:00:00|         61.529999|             61.57|         60.580002|61.360001000000004| 9761500|53.517590000000006|\n+-------------------+------------------+------------------+------------------+------------------+--------+------------------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Open","nullable":true,"type":"double"},{"metadata":{},"name":"High","nullable":true,"type":"double"},{"metadata":{},"name":"Low","nullable":true,"type":"double"},{"metadata":{},"name":"Close","nullable":true,"type":"double"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">TypeError</span>: csv() got an unexpected keyword argument &apos;inferSchrema&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729750&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df <span class=\"ansiyellow\">=</span> spark<span class=\"ansiyellow\">.</span>read<span class=\"ansiyellow\">.</span>csv<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;/FileStore/tables/walmart_stock.csv&apos;</span><span class=\"ansiyellow\">,</span> header<span class=\"ansiyellow\">=</span>True<span class=\"ansiyellow\">,</span> inferSchrema<span class=\"ansiyellow\">=</span>True<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      2</span> df<span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">TypeError</span>: csv() got an unexpected keyword argument &apos;inferSchrema&apos;</div>","workflows":[],"startTime":1514759977112,"submitTime":1514759977091,"finishTime":1514759977942,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":true},"streamStates":{},"nuid":"dc6feb60-636d-49a4-9d7d-8873277aee17"},{"version":"CommandV1","origId":843068537729751,"guid":"18bd1179-2fe7-43f1-aa1b-c08402f37bba","subtype":"command","commandType":"auto","position":8.0,"command":"%md #### What are the column names?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"07c7e91b-7826-4785-80a5-a12a4fb3c58f"},{"version":"CommandV1","origId":843068537729752,"guid":"48f7a847-bd60-4ad8-9e41-bf3477f04596","subtype":"command","commandType":"auto","position":9.0,"command":"df.columns","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">6</span><span class=\"ansired\">]: </span>[&apos;Date&apos;, &apos;Open&apos;, &apos;High&apos;, &apos;Low&apos;, &apos;Close&apos;, &apos;Volume&apos;, &apos;Adj Close&apos;]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514759913259,"submitTime":1514759910918,"finishTime":1514759913337,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"f7ea08c6-1a63-47dd-b5ea-b4bde8a716c6"},{"version":"CommandV1","origId":843068537729753,"guid":"fa719087-2a73-4377-b8fc-6743f5bff371","subtype":"command","commandType":"auto","position":10.0,"command":"%md #### What does the Schema look like?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"0c4c6868-8054-443f-a2de-7e80a153731c"},{"version":"CommandV1","origId":843068537729754,"guid":"c2cb6104-1237-4295-98be-329533f1c11a","subtype":"command","commandType":"auto","position":11.0,"command":"df.printSchema()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">root\n |-- Date: timestamp (nullable = true)\n |-- Open: double (nullable = true)\n |-- High: double (nullable = true)\n |-- Low: double (nullable = true)\n |-- Close: double (nullable = true)\n |-- Volume: integer (nullable = true)\n |-- Adj Close: double (nullable = true)\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514759913753,"submitTime":1514759913736,"finishTime":1514759913829,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"c313cb3f-5031-43e7-9bde-07cd4c5a145c"},{"version":"CommandV1","origId":843068537729755,"guid":"feb937a2-7e5f-4a4c-adf4-7de042e35454","subtype":"command","commandType":"auto","position":12.0,"command":"%md #### Print out the first 5 columns.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"3a1cd203-513d-4ec6-bc8b-7e8c23539908"},{"version":"CommandV1","origId":843068537729756,"guid":"9b60d426-5075-4df6-91eb-f9c2fe0f43c5","subtype":"command","commandType":"auto","position":13.0,"command":"df[df.columns[:5]].show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------------------+------------------+------------------+------------------+------------------+\n|               Date|              Open|              High|               Low|             Close|\n+-------------------+------------------+------------------+------------------+------------------+\n|2012-01-03 00:00:00|         59.970001|         61.060001|         59.869999|         60.330002|\n|2012-01-04 00:00:00|60.209998999999996|         60.349998|         59.470001|59.709998999999996|\n|2012-01-05 00:00:00|         59.349998|         59.619999|         58.369999|         59.419998|\n|2012-01-06 00:00:00|         59.419998|         59.450001|         58.869999|              59.0|\n|2012-01-09 00:00:00|         59.029999|         59.549999|         58.919998|             59.18|\n|2012-01-10 00:00:00|             59.43|59.709998999999996|             58.98|59.040001000000004|\n|2012-01-11 00:00:00|         59.060001|         59.529999|59.040001000000004|         59.400002|\n|2012-01-12 00:00:00|59.790001000000004|              60.0|         59.400002|              59.5|\n|2012-01-13 00:00:00|             59.18|59.610001000000004|59.009997999999996|59.540001000000004|\n|2012-01-17 00:00:00|         59.869999|60.110001000000004|             59.52|         59.849998|\n|2012-01-18 00:00:00|59.790001000000004|         60.029999|         59.650002|60.009997999999996|\n|2012-01-19 00:00:00|             59.93|             60.73|             59.75|60.610001000000004|\n|2012-01-20 00:00:00|             60.75|             61.25|         60.669998|61.009997999999996|\n|2012-01-23 00:00:00|         60.810001|             60.98|60.509997999999996|             60.91|\n|2012-01-24 00:00:00|             60.75|              62.0|             60.75|61.389998999999996|\n|2012-01-25 00:00:00|             61.18|61.610001000000004|61.040001000000004|         61.470001|\n|2012-01-26 00:00:00|         61.799999|             61.84|             60.77|         60.970001|\n|2012-01-27 00:00:00|60.860001000000004|         61.119999|60.540001000000004|60.709998999999996|\n|2012-01-30 00:00:00|         60.470001|             61.32|         60.349998|         61.299999|\n|2012-01-31 00:00:00|         61.529999|             61.57|         60.580002|61.360001000000004|\n+-------------------+------------------+------------------+------------------+------------------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">NameError</span>: name &apos;df&apos; is not defined","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729756&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">[</span>df<span class=\"ansiyellow\">.</span>columns<span class=\"ansiyellow\">[</span><span class=\"ansiyellow\">:</span><span class=\"ansicyan\">5</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">NameError</span>: name &apos;df&apos; is not defined</div>","workflows":[],"startTime":1514759917673,"submitTime":1514759917655,"finishTime":1514759918103,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"da8c6cc2-9e8d-49c8-833f-53ecb3a88575"},{"version":"CommandV1","origId":843068537729757,"guid":"7d77dc93-46ab-4e23-88bc-0a27ac460605","subtype":"command","commandType":"auto","position":14.0,"command":"%md #### Use describe() to learn about the DataFrame.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"ef2c6383-614a-4959-b0c8-aa52f7f1b60c"},{"version":"CommandV1","origId":843068537729758,"guid":"4c7ab8a3-a680-4d90-97f3-eb99ddd2ab67","subtype":"command","commandType":"auto","position":15.0,"command":"from pyspark.sql.functions import format_number\ndesc = df.describe()\ndesc.show()\ndesc.printSchema()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------+------------------+-----------------+-----------------+-----------------+-----------------+-----------------+\n|summary|              Open|             High|              Low|            Close|           Volume|        Adj Close|\n+-------+------------------+-----------------+-----------------+-----------------+-----------------+-----------------+\n|  count|              1258|             1258|             1258|             1258|             1258|             1258|\n|   mean| 72.35785375357709|72.83938807631165| 71.9186009594594|72.38844998012726|8222093.481717011|67.23883848728146|\n| stddev|  6.76809024470826|6.768186808159218|6.744075756255496|6.756859163732991|  4519780.8431556|6.722609449996857|\n|    min|56.389998999999996|        57.060001|        56.299999|        56.419998|          2094900|        50.363689|\n|    max|         90.800003|        90.970001|            89.25|        90.470001|         80898100|84.91421600000001|\n+-------+------------------+-----------------+-----------------+-----------------+-----------------+-----------------+\n\nroot\n |-- summary: string (nullable = true)\n |-- Open: string (nullable = true)\n |-- High: string (nullable = true)\n |-- Low: string (nullable = true)\n |-- Close: string (nullable = true)\n |-- Volume: string (nullable = true)\n |-- Adj Close: string (nullable = true)\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"desc","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"summary","nullable":true,"type":"string"},{"metadata":{},"name":"Open","nullable":true,"type":"string"},{"metadata":{},"name":"High","nullable":true,"type":"string"},{"metadata":{},"name":"Low","nullable":true,"type":"string"},{"metadata":{},"name":"Close","nullable":true,"type":"string"},{"metadata":{},"name":"Volume","nullable":true,"type":"string"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">NameError</span>: name &apos;df&apos; is not defined","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729758&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> <span class=\"ansigreen\">from</span> pyspark<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">.</span>functions <span class=\"ansigreen\">import</span> format_number<span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 2</span><span class=\"ansiyellow\"> </span>desc <span class=\"ansiyellow\">=</span> df<span class=\"ansiyellow\">.</span>describe<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      3</span> desc<span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      4</span> desc<span class=\"ansiyellow\">.</span>printSchema<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">NameError</span>: name &apos;df&apos; is not defined</div>","workflows":[],"startTime":1514761476898,"submitTime":1514761476881,"finishTime":1514761477781,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"d8104ce5-4c7e-4c0e-abf9-0018d6e51708"},{"version":"CommandV1","origId":843068537729759,"guid":"2b2d92fc-adcf-489d-9312-82ad9e74145c","subtype":"command","commandType":"auto","position":16.0,"command":"%md ## Bonus Question!\n#### There are too many decimal places for mean and stddev in the describe() dataframe. Format the numbers to just show up to two decimal places. Pay careful attention to the datatypes that .describe() returns, we didn't cover how to do this exact formatting, but we covered something very similar. [Check this link for a hint](http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Column.cast)\n\nIf you get stuck on this, don't worry, just view the solutions.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"95e68d74-8103-4926-9e6b-133ccd3f2ea3"},{"version":"CommandV1","origId":843068537729760,"guid":"d680041f-222c-4e0f-837c-19b0714095d1","subtype":"command","commandType":"auto","position":17.0,"command":"columns_formated = ['summary', \n                    format_number(desc.Open.cast('Double'),2).alias('Open'), \n                    format_number(desc.High.cast('Double'),2).alias('High'), \n                    format_number(desc.Low.cast('Double'),2).alias('Low'), \n                    format_number(desc.Close.cast('Double'),2).alias('Close'), \n                    desc.Volume.cast('Integer').alias('Volume'),\n                    format_number(desc['Adj close'].cast('Double'),2).alias('Adj close')]\ndesc1 = desc.select(columns_formated)\ndesc1.show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------+--------+--------+--------+--------+--------+---------+\n|summary|    Open|    High|     Low|   Close|  Volume|Adj close|\n+-------+--------+--------+--------+--------+--------+---------+\n|  count|1,258.00|1,258.00|1,258.00|1,258.00|    1258| 1,258.00|\n|   mean|   72.36|   72.84|   71.92|   72.39| 8222093|    67.24|\n| stddev|    6.77|    6.77|    6.74|    6.76| 4519780|     6.72|\n|    min|   56.39|   57.06|   56.30|   56.42| 2094900|    50.36|\n|    max|   90.80|   90.97|   89.25|   90.47|80898100|    84.91|\n+-------+--------+--------+--------+--------+--------+---------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"desc1","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"summary","nullable":true,"type":"string"},{"metadata":{},"name":"Open","nullable":true,"type":"string"},{"metadata":{},"name":"High","nullable":true,"type":"string"},{"metadata":{},"name":"Low","nullable":true,"type":"string"},{"metadata":{},"name":"Close","nullable":true,"type":"string"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj close","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">ParseException</span>: u&apos;\\nDataType open is not supported.(line 1, pos 0)\\n\\n== SQL ==\\nOpen\\n^^^\\n&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">ParseException</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729760&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">     12</span>                     format_number<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Close&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>alias<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Close&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     13</span>                     format_number(&apos;Adj Close&apos;,2).alias(&apos;Adj Close&apos;)]\n<span class=\"ansigreen\">---&gt; 14</span><span class=\"ansiyellow\"> </span>desc1 <span class=\"ansiyellow\">=</span> desc<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span>format_number<span class=\"ansiyellow\">(</span>desc<span class=\"ansiyellow\">.</span>Open<span class=\"ansiyellow\">.</span>cast<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Open&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     15</span> desc1<span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/column.py</span> in <span class=\"ansicyan\">cast</span><span class=\"ansiblue\">(self, dataType)</span>\n<span class=\"ansigreen\">    413</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">    414</span>         <span class=\"ansigreen\">if</span> isinstance<span class=\"ansiyellow\">(</span>dataType<span class=\"ansiyellow\">,</span> basestring<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">--&gt; 415</span><span class=\"ansiyellow\">             </span>jc <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jc<span class=\"ansiyellow\">.</span>cast<span class=\"ansiyellow\">(</span>dataType<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    416</span>         <span class=\"ansigreen\">elif</span> isinstance<span class=\"ansiyellow\">(</span>dataType<span class=\"ansiyellow\">,</span> DataType<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    417</span>             <span class=\"ansigreen\">from</span> pyspark<span class=\"ansiyellow\">.</span>sql <span class=\"ansigreen\">import</span> SparkSession<span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     72</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.parser.ParseException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 73</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> ParseException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     74</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.streaming.StreamingQueryException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     75</span>                 <span class=\"ansigreen\">raise</span> StreamingQueryException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">ParseException</span>: u&apos;\\nDataType open is not supported.(line 1, pos 0)\\n\\n== SQL ==\\nOpen\\n^^^\\n&apos;</div>","workflows":[],"startTime":1514762866304,"submitTime":1514762866290,"finishTime":1514762866429,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"34b7484f-99d5-42d6-940f-42f07e50177e"},{"version":"CommandV1","origId":843068537729763,"guid":"e783e1c8-495c-45dd-907f-b0bc050ddcce","subtype":"command","commandType":"auto","position":20.0,"command":"%md #### Create a new dataframe with a column called HV Ratio that is the ratio of the High Price versus volume of stock traded for a day.","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"20e98fc8-2b6f-4828-ad58-117c10031de2"},{"version":"CommandV1","origId":843068537729764,"guid":"690d73d5-0d6b-4cef-8076-c9377cec59be","subtype":"command","commandType":"auto","position":21.0,"command":"df = df.withColumn('HV Ration',format_number(df['high']/df['Volume'],5))\ndf.show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------------------+------------------+------------------+------------------+------------------+--------+------------------+---------+\n|               Date|              Open|              High|               Low|             Close|  Volume|         Adj Close|HV Ration|\n+-------------------+------------------+------------------+------------------+------------------+--------+------------------+---------+\n|2012-01-03 00:00:00|         59.970001|         61.060001|         59.869999|         60.330002|12668800|52.619234999999996|  0.00000|\n|2012-01-04 00:00:00|60.209998999999996|         60.349998|         59.470001|59.709998999999996| 9593300|         52.078475|  0.00001|\n|2012-01-05 00:00:00|         59.349998|         59.619999|         58.369999|         59.419998|12768200|         51.825539|  0.00000|\n|2012-01-06 00:00:00|         59.419998|         59.450001|         58.869999|              59.0| 8069400|          51.45922|  0.00001|\n|2012-01-09 00:00:00|         59.029999|         59.549999|         58.919998|             59.18| 6679300|51.616215000000004|  0.00001|\n|2012-01-10 00:00:00|             59.43|59.709998999999996|             58.98|59.040001000000004| 6907300|         51.494109|  0.00001|\n|2012-01-11 00:00:00|         59.060001|         59.529999|59.040001000000004|         59.400002| 6365600|         51.808098|  0.00001|\n|2012-01-12 00:00:00|59.790001000000004|              60.0|         59.400002|              59.5| 7236400|51.895315999999994|  0.00001|\n|2012-01-13 00:00:00|             59.18|59.610001000000004|59.009997999999996|59.540001000000004| 7729300|51.930203999999996|  0.00001|\n|2012-01-17 00:00:00|         59.869999|60.110001000000004|             59.52|         59.849998| 8500000|         52.200581|  0.00001|\n|2012-01-18 00:00:00|59.790001000000004|         60.029999|         59.650002|60.009997999999996| 5911400|         52.340131|  0.00001|\n|2012-01-19 00:00:00|             59.93|             60.73|             59.75|60.610001000000004| 9234600|         52.863447|  0.00001|\n|2012-01-20 00:00:00|             60.75|             61.25|         60.669998|61.009997999999996|10378800|53.212320999999996|  0.00001|\n|2012-01-23 00:00:00|         60.810001|             60.98|60.509997999999996|             60.91| 7134100|         53.125104|  0.00001|\n|2012-01-24 00:00:00|             60.75|              62.0|             60.75|61.389998999999996| 7362800| 53.54375400000001|  0.00001|\n|2012-01-25 00:00:00|             61.18|61.610001000000004|61.040001000000004|         61.470001| 5915800| 53.61353100000001|  0.00001|\n|2012-01-26 00:00:00|         61.799999|             61.84|             60.77|         60.970001| 7436200|         53.177436|  0.00001|\n|2012-01-27 00:00:00|60.860001000000004|         61.119999|60.540001000000004|60.709998999999996| 6287300|         52.950665|  0.00001|\n|2012-01-30 00:00:00|         60.470001|             61.32|         60.349998|         61.299999| 7636900|53.465256999999994|  0.00001|\n|2012-01-31 00:00:00|         61.529999|             61.57|         60.580002|61.360001000000004| 9761500|53.517590000000006|  0.00001|\n+-------------------+------------------+------------------+------------------+------------------+--------+------------------+---------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Open","nullable":true,"type":"double"},{"metadata":{},"name":"High","nullable":true,"type":"double"},{"metadata":{},"name":"Low","nullable":true,"type":"double"},{"metadata":{},"name":"Close","nullable":true,"type":"double"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"double"},{"metadata":{},"name":"HV Ration","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514764988732,"submitTime":1514764988718,"finishTime":1514764988973,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"6e4b0d41-0c17-45cd-917e-c458cfd40e9a"},{"version":"CommandV1","origId":843068537729765,"guid":"52419cbb-84cf-433a-8418-7f550b9654e7","subtype":"command","commandType":"auto","position":22.0,"command":"%md #### What day had the Peak High in Price?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"c4467e1c-82cd-4f59-824c-406f96262871"},{"version":"CommandV1","origId":843068537729766,"guid":"6d7a8a2d-f03e-42df-8e8a-f102a0f7d1c0","subtype":"command","commandType":"auto","position":23.0,"command":"from pyspark.sql.functions import dayofyear, max\n\ndf.createOrReplaceTempView('wallmart')\nresults = spark.sql(\"select Date, High from wallmart where High = (select max(High) from wallmart)\")\nresults.show()\n\ndf.orderBy(df['High'].desc()).show(1)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------------------+---------+\n|               Date|     High|\n+-------------------+---------+\n|2015-01-13 00:00:00|90.970001|\n+-------------------+---------+\n\n+-------------------+---------+---------+-----+---------+-------+---------+---------+----+-----+\n|               Date|     Open|     High|  Low|    Close| Volume|Adj Close|HV Ration|Year|Month|\n+-------------------+---------+---------+-----+---------+-------+---------+---------+----+-----+\n|2015-01-13 00:00:00|90.800003|90.970001|88.93|89.309998|8215400|83.825448|  0.00001|2015|    1|\n+-------------------+---------+---------+-----+---------+-------+---------+---------+----+-----+\nonly showing top 1 row\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"results","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"High","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: &apos;DataFrame&apos; object has no attribute &apos;desc&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729766&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      5</span> results1<span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      6</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 7</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>orderBy<span class=\"ansiyellow\">(</span>df<span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;High&apos;</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>desc<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.py</span> in <span class=\"ansicyan\">__getattr__</span><span class=\"ansiblue\">(self, name)</span>\n<span class=\"ansigreen\">   1041</span>         <span class=\"ansigreen\">if</span> name <span class=\"ansigreen\">not</span> <span class=\"ansigreen\">in</span> self<span class=\"ansiyellow\">.</span>columns<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1042</span>             raise AttributeError(\n<span class=\"ansigreen\">-&gt; 1043</span><span class=\"ansiyellow\">                 &quot;&apos;%s&apos; object has no attribute &apos;%s&apos;&quot; % (self.__class__.__name__, name))\n</span><span class=\"ansigreen\">   1044</span>         jc <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>apply<span class=\"ansiyellow\">(</span>name<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1045</span>         <span class=\"ansigreen\">return</span> Column<span class=\"ansiyellow\">(</span>jc<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: &apos;DataFrame&apos; object has no attribute &apos;desc&apos;</div>","workflows":[],"startTime":1514771778126,"submitTime":1514771778114,"finishTime":1514771780340,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"b5b2ac8c-088d-4b87-b083-3cf2ff5c83f3"},{"version":"CommandV1","origId":843068537729767,"guid":"078498a2-7c1f-4409-8a32-15cdbfa676f9","subtype":"command","commandType":"auto","position":24.0,"command":"%md #### What is the mean of the Close column?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"d34a2fee-cf23-4bce-a323-439b8868f1fa"},{"version":"CommandV1","origId":843068537729768,"guid":"b8ddc73b-5a9d-4533-bf35-f4010ba9712e","subtype":"command","commandType":"auto","position":25.0,"command":"from pyspark.sql.functions import mean\ndf.select(mean('Close').alias('Mean Close')).show()\n\ndf.agg({'Close':'mean'}).show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-----------------+\n|       Mean Close|\n+-----------------+\n|72.38844998012726|\n+-----------------+\n\n+-----------------+\n|       avg(Close)|\n+-----------------+\n|72.38844998012726|\n+-----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AnalysisException</span>: u&apos;Cannot resolve column name &quot;Clsoe&quot; among (Date, Open, High, Low, Close, Volume, Adj Close);&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729768&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      2</span> df<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span>mean<span class=\"ansiyellow\">(</span>df<span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;Close&apos;</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>alias<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Mean Close&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      3</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 4</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>agg<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">{</span><span class=\"ansiblue\">&apos;Clsoe&apos;</span><span class=\"ansiyellow\">:</span><span class=\"ansiblue\">&apos;mean&apos;</span><span class=\"ansiyellow\">}</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.py</span> in <span class=\"ansicyan\">agg</span><span class=\"ansiblue\">(self, *exprs)</span>\n<span class=\"ansigreen\">   1186</span>         <span class=\"ansiyellow\">[</span>Row<span class=\"ansiyellow\">(</span>min<span class=\"ansiyellow\">(</span>age<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">=</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1187</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">-&gt; 1188</span><span class=\"ansiyellow\">         </span><span class=\"ansigreen\">return</span> self<span class=\"ansiyellow\">.</span>groupBy<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>agg<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">*</span>exprs<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1189</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1190</span>     <span class=\"ansiyellow\">@</span>since<span class=\"ansiyellow\">(</span><span class=\"ansicyan\">2.0</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/group.py</span> in <span class=\"ansicyan\">agg</span><span class=\"ansiblue\">(self, *exprs)</span>\n<span class=\"ansigreen\">     86</span>         <span class=\"ansigreen\">assert</span> exprs<span class=\"ansiyellow\">,</span> <span class=\"ansiblue\">&quot;exprs should not be empty&quot;</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     87</span>         <span class=\"ansigreen\">if</span> len<span class=\"ansiyellow\">(</span>exprs<span class=\"ansiyellow\">)</span> <span class=\"ansiyellow\">==</span> <span class=\"ansicyan\">1</span> <span class=\"ansigreen\">and</span> isinstance<span class=\"ansiyellow\">(</span>exprs<span class=\"ansiyellow\">[</span><span class=\"ansicyan\">0</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> dict<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 88</span><span class=\"ansiyellow\">             </span>jdf <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jgd<span class=\"ansiyellow\">.</span>agg<span class=\"ansiyellow\">(</span>exprs<span class=\"ansiyellow\">[</span><span class=\"ansicyan\">0</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     89</span>         <span class=\"ansigreen\">else</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     90</span>             <span class=\"ansired\"># Columns</span><span class=\"ansiyellow\"></span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     67</span>                                              e.java_exception.getStackTrace()))\n<span class=\"ansigreen\">     68</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.AnalysisException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 69</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     70</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.analysis&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AnalysisException</span>: u&apos;Cannot resolve column name &quot;Clsoe&quot; among (Date, Open, High, Low, Close, Volume, Adj Close);&apos;</div>","workflows":[],"startTime":1514773059494,"submitTime":1514773059482,"finishTime":1514773060705,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"a0062cec-4f02-4ae0-b0c1-ad0d358d4ddb"},{"version":"CommandV1","origId":843068537729769,"guid":"20974209-c55c-4502-a6fa-463850a1f453","subtype":"command","commandType":"auto","position":26.0,"command":"%md #### What is the max and min of the Volume column?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"5acffbda-7f5a-4a86-b65c-2e2fbd664321"},{"version":"CommandV1","origId":843068537729770,"guid":"ef57faf8-1a1f-4db2-9136-5dbf6218943e","subtype":"command","commandType":"auto","position":27.0,"command":"from pyspark.sql.functions import min, max\n#result = df.agg({'Volume':'max', 'Volume':'min'})\nresult = spark.sql(\"select min(Volume) as min_volume, max(Volume) as max_volume from wallmart\")\nresult.show()\n\ndf.select(min('Volume'), max('Volume')).show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+----------+----------+\n|min_volume|max_volume|\n+----------+----------+\n|   2094900|  80898100|\n+----------+----------+\n\n+-----------+-----------+\n|min(Volume)|max(Volume)|\n+-----------+-----------+\n|    2094900|   80898100|\n+-----------+-----------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"result","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"min_volume","nullable":true,"type":"integer"},{"metadata":{},"name":"max_volume","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AnalysisException</span>: u&quot;cannot resolve &apos;&#96;V&#96;&apos; given input columns: [High, Adj Close, Volume, Month, Date, Open, Low, Year, HV Ration, Close];;\\n&apos;Aggregate [&apos;V, max(Volume#119) AS max(Volume)#4400]\\n+- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#4073, month(cast(Date#114 as date)) AS Month#4085]\\n   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#4073, Month#4032]\\n      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#4020, month(cast(Date#114 as date)) AS Month#4032]\\n         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#4020, Month#3979]\\n            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3967, month(cast(Date#114 as date)) AS Month#3979]\\n               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3967, Month#3919]\\n                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3907, month(cast(Date#114 as date)) AS Month#3919]\\n                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3907, Month#3858]\\n                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3846, month(cast(Date#114 as date)) AS Month#3858]\\n                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3846, Month#3798]\\n                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3786, month(cast(Date#114 as date)) AS Month#3798]\\n                                 +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3786, Month#3738]\\n                                    +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3726, month(cast(Date#114 as date)) AS Month#3738]\\n                                       +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3726, Month#3678]\\n                                          +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3666, month(cast(Date#114 as date)) AS Month#3678]\\n                                             +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3666, Month#3618]\\n                                                +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3606, month(cast(Date#114 as date)) AS Month#3618]\\n                                                   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3606, Month#3551]\\n                                                      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3539, month(cast(Date#114 as date)) AS Month#3551]\\n                                                         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3539, Month#3527]\\n                                                            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3515, month(cast(Date#114 as date)) AS Month#3527]\\n                                                               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3515, Month#3401]\\n                                                                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3389, month(cast(Date#114 as date)) AS Month#3401]\\n                                                                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3389, Month#3360]\\n                                                                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3348, month(cast(Date#114 as date)) AS Month#3360]\\n                                                                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3348, Month#3325]\\n                                                                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3313, month(cast(Date#114 as date)) AS Month#3325]\\n                                                                                 +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3313, Month#3273]\\n                                                                                    +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3261, month(cast(Date#114 as date)) AS Month#3273]\\n                                                                                       +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3261, Month#3222]\\n                                                                                          +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3210, month(cast(Date#114 as date)) AS Month#3222]\\n                                                                                             +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3210, Month#3173]\\n                                                                                                +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3161, month(cast(Date#114 as date)) AS Month#3173]\\n                                                                                                   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3161, Month#3137]\\n                                                                                                      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3125, month(cast(Date#114 as date)) AS Month#3137]\\n                                                                                                         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3125, Month#3101]\\n                                                                                                            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3089, month(cast(Date#114 as date)) AS Month#3101]\\n                                                                                                               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3089, Month#3066]\\n                                                                                                                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3054, month(cast(Date#114 as date)) AS Month#3066]\\n                                                                                                                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3054, Month#3031]\\n                                                                                                                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3019, month(cast(Date#114 as date)) AS Month#3031]\\n                                                                                                                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3019, Month#2988]\\n                                                                                                                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2976, month(cast(Date#114 as date)) AS Month#2988]\\n                                                                                                                                 +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2976, Month#2964]\\n                                                                                                                                    +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2952, month(cast(Date#114 as date)) AS Month#2964]\\n                                                                                                                                       +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2952, Month#2940]\\n                                                                                                                                          +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2928, month(cast(Date#114 as date)) AS Month#2940]\\n                                                                                                                                             +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2928, Month#2857]\\n                                                                                                                                                +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2846, month(cast(Date#114 as date)) AS Month#2857]\\n                                                                                                                                                   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2846]\\n                                                                                                                                                      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2835]\\n                                                                                                                                                         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2699]\\n                                                                                                                                                            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2688]\\n                                                                                                                                                               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2677]\\n                                                                                                                                                                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2666]\\n                                                                                                                                                                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2655]\\n                                                                                                                                                                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2644]\\n                                                                                                                                                                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, format_number((high#116 / cast(Volume#119 as double)), 5) AS HV Ration#1770]\\n                                                                                                                                                                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, format_number((high#116 / cast(Volume#119 as double)), 5) AS HV Ration#1726]\\n                                                                                                                                                                                 +- Relation[Date#114,Open#115,High#116,Low#117,Close#118,Volume#119,Adj Close#120] csv\\n&quot;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729770&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      3</span> result<span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      4</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 5</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span>min<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Volume&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> max<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Volume&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.py</span> in <span class=\"ansicyan\">select</span><span class=\"ansiblue\">(self, *cols)</span>\n<span class=\"ansigreen\">   1061</span>         <span class=\"ansiyellow\">[</span>Row<span class=\"ansiyellow\">(</span>name<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;Alice&apos;</span><span class=\"ansiyellow\">,</span> age<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">12</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> Row<span class=\"ansiyellow\">(</span>name<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;Bob&apos;</span><span class=\"ansiyellow\">,</span> age<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">15</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1062</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">-&gt; 1063</span><span class=\"ansiyellow\">         </span>jdf <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span>self<span class=\"ansiyellow\">.</span>_jcols<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">*</span>cols<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1064</span>         <span class=\"ansigreen\">return</span> DataFrame<span class=\"ansiyellow\">(</span>jdf<span class=\"ansiyellow\">,</span> self<span class=\"ansiyellow\">.</span>sql_ctx<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1065</span> <span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     67</span>                                              e.java_exception.getStackTrace()))\n<span class=\"ansigreen\">     68</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.AnalysisException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 69</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     70</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.analysis&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AnalysisException</span>: u&quot;cannot resolve &apos;&#96;V&#96;&apos; given input columns: [High, Adj Close, Volume, Month, Date, Open, Low, Year, HV Ration, Close];;\\n&apos;Aggregate [&apos;V, max(Volume#119) AS max(Volume)#4400]\\n+- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#4073, month(cast(Date#114 as date)) AS Month#4085]\\n   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#4073, Month#4032]\\n      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#4020, month(cast(Date#114 as date)) AS Month#4032]\\n         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#4020, Month#3979]\\n            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3967, month(cast(Date#114 as date)) AS Month#3979]\\n               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3967, Month#3919]\\n                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3907, month(cast(Date#114 as date)) AS Month#3919]\\n                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3907, Month#3858]\\n                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3846, month(cast(Date#114 as date)) AS Month#3858]\\n                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3846, Month#3798]\\n                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3786, month(cast(Date#114 as date)) AS Month#3798]\\n                                 +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3786, Month#3738]\\n                                    +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3726, month(cast(Date#114 as date)) AS Month#3738]\\n                                       +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3726, Month#3678]\\n                                          +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3666, month(cast(Date#114 as date)) AS Month#3678]\\n                                             +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3666, Month#3618]\\n                                                +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3606, month(cast(Date#114 as date)) AS Month#3618]\\n                                                   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3606, Month#3551]\\n                                                      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3539, month(cast(Date#114 as date)) AS Month#3551]\\n                                                         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3539, Month#3527]\\n                                                            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3515, month(cast(Date#114 as date)) AS Month#3527]\\n                                                               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3515, Month#3401]\\n                                                                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3389, month(cast(Date#114 as date)) AS Month#3401]\\n                                                                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3389, Month#3360]\\n                                                                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3348, month(cast(Date#114 as date)) AS Month#3360]\\n                                                                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3348, Month#3325]\\n                                                                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3313, month(cast(Date#114 as date)) AS Month#3325]\\n                                                                                 +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3313, Month#3273]\\n                                                                                    +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3261, month(cast(Date#114 as date)) AS Month#3273]\\n                                                                                       +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3261, Month#3222]\\n                                                                                          +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3210, month(cast(Date#114 as date)) AS Month#3222]\\n                                                                                             +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3210, Month#3173]\\n                                                                                                +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3161, month(cast(Date#114 as date)) AS Month#3173]\\n                                                                                                   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3161, Month#3137]\\n                                                                                                      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3125, month(cast(Date#114 as date)) AS Month#3137]\\n                                                                                                         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3125, Month#3101]\\n                                                                                                            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3089, month(cast(Date#114 as date)) AS Month#3101]\\n                                                                                                               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3089, Month#3066]\\n                                                                                                                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3054, month(cast(Date#114 as date)) AS Month#3066]\\n                                                                                                                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3054, Month#3031]\\n                                                                                                                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#3019, month(cast(Date#114 as date)) AS Month#3031]\\n                                                                                                                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#3019, Month#2988]\\n                                                                                                                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2976, month(cast(Date#114 as date)) AS Month#2988]\\n                                                                                                                                 +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2976, Month#2964]\\n                                                                                                                                    +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2952, month(cast(Date#114 as date)) AS Month#2964]\\n                                                                                                                                       +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2952, Month#2940]\\n                                                                                                                                          +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2928, month(cast(Date#114 as date)) AS Month#2940]\\n                                                                                                                                             +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2928, Month#2857]\\n                                                                                                                                                +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, Year#2846, month(cast(Date#114 as date)) AS Month#2857]\\n                                                                                                                                                   +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2846]\\n                                                                                                                                                      +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2835]\\n                                                                                                                                                         +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2699]\\n                                                                                                                                                            +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2688]\\n                                                                                                                                                               +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2677]\\n                                                                                                                                                                  +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2666]\\n                                                                                                                                                                     +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2655]\\n                                                                                                                                                                        +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, HV Ration#1770, year(cast(Date#114 as date)) AS Year#2644]\\n                                                                                                                                                                           +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, format_number((high#116 / cast(Volume#119 as double)), 5) AS HV Ration#1770]\\n                                                                                                                                                                              +- Project [Date#114, Open#115, High#116, Low#117, Close#118, Volume#119, Adj Close#120, format_number((high#116 / cast(Volume#119 as double)), 5) AS HV Ration#1726]\\n                                                                                                                                                                                 +- Relation[Date#114,Open#115,High#116,Low#117,Close#118,Volume#119,Adj Close#120] csv\\n&quot;</div>","workflows":[],"startTime":1514773482108,"submitTime":1514773482092,"finishTime":1514773483328,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":true},"streamStates":{},"nuid":"01acfb01-35ad-4950-baad-ac491b1b9113"},{"version":"CommandV1","origId":843068537729772,"guid":"544dafbe-db67-4e20-a38c-d346bc3bea82","subtype":"command","commandType":"auto","position":29.0,"command":"%md #### How many days was the Close lower than 60 dollars?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"56475272-7810-40b6-a17f-1c6b460480c1"},{"version":"CommandV1","origId":843068537729773,"guid":"8549fa06-c365-49c4-a2ad-27fd7cb510f7","subtype":"command","commandType":"auto","position":30.0,"command":"\nprint df.filter(df['Close'] < 60).count()\nprint df.filter('Close < 60').count()\n\nresult = spark.sql(\"select count(*) as days_under_60 from wallmart where Close < 60\").show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">81\n81\n+-------------+\n|days_under_60|\n+-------------+\n|           81|\n+-------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: &apos;int&apos; object has no attribute &apos;show&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729773&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> mask <span class=\"ansiyellow\">=</span>  df<span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;Close&apos;</span><span class=\"ansiyellow\">]</span> <span class=\"ansiyellow\">&lt;</span> <span class=\"ansicyan\">60</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      2</span> result <span class=\"ansiyellow\">=</span> df<span class=\"ansiyellow\">.</span>filter<span class=\"ansiyellow\">(</span>mask<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 3</span><span class=\"ansiyellow\"> </span>result<span class=\"ansiyellow\">.</span>count<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      4</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      5</span> result <span class=\"ansiyellow\">=</span> spark<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&quot;select count(*) as days_under_60 from wallmart where Close &lt; 60&quot;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: &apos;int&apos; object has no attribute &apos;show&apos;</div>","workflows":[],"startTime":1514773603111,"submitTime":1514773603096,"finishTime":1514773604822,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"53d3a2b1-98e2-4433-8a2c-c21beb455a26"},{"version":"CommandV1","origId":843068537729774,"guid":"4bf40764-0213-40ad-8c32-deec4cb163a7","subtype":"command","commandType":"auto","position":31.0,"command":"%md #### What percentage of the time was the High greater than 80 dollars ?\n#### In other words, (Number of Days High>80)/(Total Days in the dataset)","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"5e0c4806-7e44-48e9-a84d-65e290f005af"},{"version":"CommandV1","origId":843068537729775,"guid":"0347695a-4abe-46c9-9366-b7835685cf9c","subtype":"command","commandType":"auto","position":32.0,"command":"more_than_80 = df.filter(df['High'] > 80).count()\nprint \"higher 80%:\", more_than_80\ntotal = df.count()\n\nspark.sql(\"select count(*) from wallmart\").show()\n\nprint \"totoa:\", total\nprint 100.0* more_than_80 / total, \"%\"","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">higher 80%: 115\n+--------+\n|count(1)|\n+--------+\n|    1258|\n+--------+\n\ntotoa: 1258\n9.14149443561 %\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514767372682,"submitTime":1514767372670,"finishTime":1514767373609,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"8f02a743-eab0-4431-90be-dd3523aadafe"},{"version":"CommandV1","origId":843068537729776,"guid":"513683c7-a54e-42ac-8aa1-2f5b5a363d1d","subtype":"command","commandType":"auto","position":33.0,"command":"%md #### What is the Pearson correlation between High and Volume?\n#### [Hint](http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.DataFrameStatFunctions.corr)","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"80b7d181-2174-4a94-a480-98f6fe41017b"},{"version":"CommandV1","origId":843068537729777,"guid":"11add000-642e-48aa-802f-23815df0a309","subtype":"command","commandType":"auto","position":34.0,"command":"from pyspark.sql.functions import corr\ndf.select(corr('High','Volume')).show()\n","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------------------+\n| corr(High, Volume)|\n+-------------------+\n|-0.3384326061737161|\n+-------------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">TypeError</span>: corr() takes exactly 2 arguments (3 given)","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729777&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> <span class=\"ansigreen\">from</span> pyspark<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">.</span>functions <span class=\"ansigreen\">import</span> corr<span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 2</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span>corr<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;High&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;Volume&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;Pearson&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">TypeError</span>: corr() takes exactly 2 arguments (3 given)</div>","workflows":[],"startTime":1514767861587,"submitTime":1514767861575,"finishTime":1514767861862,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"4da5992b-848b-4fa8-870c-3a120df8d228"},{"version":"CommandV1","origId":843068537729778,"guid":"4965d43e-876f-4c27-a817-b305d4b5977f","subtype":"command","commandType":"auto","position":35.0,"command":"%md #### What is the max High per year?","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"19596268-49b6-425b-87fc-2a1392227d60"},{"version":"CommandV1","origId":843068537729779,"guid":"bc835c40-aa73-4c79-bea4-c47ba6411521","subtype":"command","commandType":"auto","position":36.0,"command":"df = df.withColumn('Year',year(df['Date']))\ndf.groupBy('Year').agg({'High':'max'}).show()","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+----+---------+\n|Year|max(High)|\n+----+---------+\n|2015|90.970001|\n|2013|81.370003|\n|2014|88.089996|\n|2012|77.599998|\n|2016|75.190002|\n+----+---------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Open","nullable":true,"type":"double"},{"metadata":{},"name":"High","nullable":true,"type":"double"},{"metadata":{},"name":"Low","nullable":true,"type":"double"},{"metadata":{},"name":"Close","nullable":true,"type":"double"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"double"},{"metadata":{},"name":"HV Ration","nullable":true,"type":"string"},{"metadata":{},"name":"Year","nullable":true,"type":"integer"},{"metadata":{},"name":"Month","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514773936354,"submitTime":1514773936340,"finishTime":1514773937333,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"cd68dea1-6428-493c-862a-d80fd51503f4"},{"version":"CommandV1","origId":843068537729780,"guid":"6d39a584-958f-48e9-ba3f-f50d513ae156","subtype":"command","commandType":"auto","position":37.0,"command":"%md #### What is the average Close for each Calendar Month?\n#### In other words, across all the years, what is the average Close price for Jan,Feb, Mar, etc... Your result will have a value for each of these months. ","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"b56eed6e-d1a9-4d5a-adac-3a4bcda3c4cd"},{"version":"CommandV1","origId":843068537729781,"guid":"de235e4f-a8f0-443a-9863-f38375313e49","subtype":"command","commandType":"auto","position":38.0,"command":"from pyspark.sql.functions import month,year\n\ndf = df.withColumn('Year',year(df['Date']))\ndf = df.withColumn('Month',month(df['Date']))\n#df.select(['Year']).distinct().show()\n\ndf_avg_close = df.groupBy('Month').agg({'Close':'mean'}).sort(['Month'])\ndf_avg_close.show(5*12)\n","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-----+-----------------+\n|Month|       avg(Close)|\n+-----+-----------------+\n|    1|71.44801958415842|\n|    2|  71.306804443299|\n|    3|71.77794377570092|\n|    4|72.97361900952382|\n|    5|72.30971688679247|\n|    6| 72.4953774245283|\n|    7|74.43971943925233|\n|    8|73.02981855454546|\n|    9|72.18411785294116|\n|   10|71.57854545454543|\n|   11| 72.1110893069307|\n|   12|72.84792478301885|\n+-----+-----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Open","nullable":true,"type":"double"},{"metadata":{},"name":"High","nullable":true,"type":"double"},{"metadata":{},"name":"Low","nullable":true,"type":"double"},{"metadata":{},"name":"Close","nullable":true,"type":"double"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"double"},{"metadata":{},"name":"HV Ration","nullable":true,"type":"string"},{"metadata":{},"name":"Year","nullable":true,"type":"integer"},{"metadata":{},"name":"Month","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null},{"name":"df_avg_close","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Month","nullable":true,"type":"integer"},{"metadata":{},"name":"avg(Close)","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: &apos;NoneType&apos; object has no attribute &apos;filter&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729781&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">     10</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     11</span> df_avg_close <span class=\"ansiyellow\">=</span> df<span class=\"ansiyellow\">.</span>groupBy<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;Year&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;Month&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>agg<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">{</span><span class=\"ansiblue\">&apos;Close&apos;</span><span class=\"ansiyellow\">:</span><span class=\"ansiblue\">&apos;mean&apos;</span><span class=\"ansiyellow\">}</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>sort<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;Year&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;Month&apos;</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 12</span><span class=\"ansiyellow\"> </span>df_avg_close<span class=\"ansiyellow\">.</span>filter<span class=\"ansiyellow\">(</span>df_avg_close<span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;Year&apos;</span><span class=\"ansiyellow\">]</span> <span class=\"ansiyellow\">&gt;</span> <span class=\"ansicyan\">2014</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: &apos;NoneType&apos; object has no attribute &apos;filter&apos;</div>","workflows":[],"startTime":1514774141869,"submitTime":1514774141850,"finishTime":1514774142979,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{"collapsed":false},"streamStates":{},"nuid":"e4e1cb4d-2b78-4abc-8005-42738601343e"},{"version":"CommandV1","origId":843068537729782,"guid":"9f204ac6-f9a4-432c-8c13-28bf3290f155","subtype":"command","commandType":"auto","position":39.0,"command":"%md # Great Job!","commandVersion":1,"state":"finished","results":{"type":"raw","data":"","arguments":{}},"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":{},"streamStates":{},"nuid":"040819c1-ea8a-478b-9cf3-af5ce444ac11"}],"dashboards":[],"guid":"33d38054-b9ac-492a-a440-516bffe75bd3","globalVars":{},"iPythonMetadata":{"nbformat":4,"IPythonMetadata":{"anaconda-cloud":{},"kernelspec":{"display_name":"Python [conda root]","language":"python","name":"conda-root-py"},"language_info":{"mimetype":"text/x-python","name":"python","pygments_lexer":"ipython3","codemirror_mode":{"name":"ipython","version":3},"version":"3.5.3","nbconvert_exporter":"python","file_extension":".py"}}},"inputWidgets":{}}