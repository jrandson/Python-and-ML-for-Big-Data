{"version":"NotebookV1","origId":3224681036817970,"name":"PySpark-Intro","language":"python","commands":[{"version":"CommandV1","origId":2281128122699094,"guid":"9686fda2-3e5b-4f44-aed1-5d5cf0e86be8","subtype":"command","commandType":"auto","position":5.0,"command":"df.printSchema()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">root\n |-- _c0: integer (nullable = true)\n |-- carat: double (nullable = true)\n |-- cut: string (nullable = true)\n |-- color: string (nullable = true)\n |-- clarity: string (nullable = true)\n |-- depth: double (nullable = true)\n |-- table: double (nullable = true)\n |-- price: integer (nullable = true)\n |-- x: double (nullable = true)\n |-- y: double (nullable = true)\n |-- z: double (nullable = true)\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: &apos;DataFrame&apos; object has no attribute &apos;printScrema&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699094&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>printScrema<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.py</span> in <span class=\"ansicyan\">__getattr__</span><span class=\"ansiblue\">(self, name)</span>\n<span class=\"ansigreen\">   1041</span>         <span class=\"ansigreen\">if</span> name <span class=\"ansigreen\">not</span> <span class=\"ansigreen\">in</span> self<span class=\"ansiyellow\">.</span>columns<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1042</span>             raise AttributeError(\n<span class=\"ansigreen\">-&gt; 1043</span><span class=\"ansiyellow\">                 &quot;&apos;%s&apos; object has no attribute &apos;%s&apos;&quot; % (self.__class__.__name__, name))\n</span><span class=\"ansigreen\">   1044</span>         jc <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>apply<span class=\"ansiyellow\">(</span>name<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1045</span>         <span class=\"ansigreen\">return</span> Column<span class=\"ansiyellow\">(</span>jc<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: &apos;DataFrame&apos; object has no attribute &apos;printScrema&apos;</div>","workflows":[],"startTime":1514638635812,"submitTime":1514638603726,"finishTime":1514638635855,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"5a2122f8-0117-4abb-a6c8-e60e614f026f"},{"version":"CommandV1","origId":2281128122699095,"guid":"eece9ded-9127-4362-a44e-417f73b27433","subtype":"command","commandType":"auto","position":6.0,"command":"df.columns","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">5</span><span class=\"ansired\">]: </span>\n[&apos;_c0&apos;,\n &apos;carat&apos;,\n &apos;cut&apos;,\n &apos;color&apos;,\n &apos;clarity&apos;,\n &apos;depth&apos;,\n &apos;table&apos;,\n &apos;price&apos;,\n &apos;x&apos;,\n &apos;y&apos;,\n &apos;z&apos;]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">TypeError</span>: &apos;list&apos; object is not callable","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699095&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>columns<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">TypeError</span>: &apos;list&apos; object is not callable</div>","workflows":[],"startTime":1514638635865,"submitTime":1514638605333,"finishTime":1514638635938,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"86a8a7cf-0eee-4ccc-baab-79f64704c851"},{"version":"CommandV1","origId":2281128122699096,"guid":"6dfaedee-59b0-48d8-9ac9-2ee8be48f3da","subtype":"command","commandType":"auto","position":7.0,"command":"df.describe().show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------+------------------+------------------+---------+-----+-------+------------------+------------------+-----------------+------------------+------------------+------------------+\n|summary|               _c0|             carat|      cut|color|clarity|             depth|             table|            price|                 x|                 y|                 z|\n+-------+------------------+------------------+---------+-----+-------+------------------+------------------+-----------------+------------------+------------------+------------------+\n|  count|             53940|             53940|    53940|53940|  53940|             53940|             53940|            53940|             53940|             53940|             53940|\n|   mean|           26970.5|0.7979397478679852|     null| null|   null| 61.74940489432624| 57.45718390804603|3932.799721913237| 5.731157211716609| 5.734525954764462|3.5387337782723316|\n| stddev|15571.281096942537|0.4740112444054196|     null| null|   null|1.4326213188336525|2.2344905628213247|3989.439738146397|1.1217607467924915|1.1421346741235616|0.7056988469499883|\n|    min|                 1|               0.2|     Fair|    D|     I1|              43.0|              43.0|              326|               0.0|               0.0|               0.0|\n|    max|             53940|              5.01|Very Good|    J|   VVS2|              79.0|              95.0|            18823|             10.74|              58.9|              31.8|\n+-------+------------------+------------------+---------+-----+-------+------------------+------------------+-----------------+------------------+------------------+------------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514574654958,"submitTime":1514574654949,"finishTime":1514574658387,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"6bf75e12-cc77-49de-8258-8b652e1fb3a7"},{"version":"CommandV1","origId":2281128122699097,"guid":"c8858a8a-2b26-458f-ac44-ebf79fbf0d26","subtype":"command","commandType":"auto","position":8.0,"command":"from pyspark.sql.types import (StructField, \n                               StringType, \n                               IntegerType, \n                               StructType)","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">ImportError</span>: No module named pysapark.sql.types","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">ImportError</span>                               Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699097&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span><span class=\"ansigreen\">from</span> pysapark<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">.</span>types <span class=\"ansigreen\">import</span> StructField<span class=\"ansiyellow\">,</span> StringType<span class=\"ansiyellow\">,</span> IntegerType<span class=\"ansiyellow\">,</span> StructType<span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">ImportError</span>: No module named pysapark.sql.types</div>","workflows":[],"startTime":1514574666938,"submitTime":1514574666930,"finishTime":1514574667011,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a021e11d-49c4-4dc4-9e99-e51cc4546661"},{"version":"CommandV1","origId":2281128122699099,"guid":"15cea695-64df-4b43-9355-43c3f599b798","subtype":"command","commandType":"auto","position":9.0,"command":"data_schrema =  = [StructField('age',IntegerType(),True),\n                  StructField('name',StringType(),True)]\n\nfinal_struct = StructType(fields=dat_schema)\n\ndf = spark.read.json('people.json',schema=final_struct)","commandVersion":0,"state":"error","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-2281128122699099&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">1</span>\n<span class=\"ansiyellow\">    data_schrema =  = [StructField(&apos;&apos;)]</span>\n<span class=\"ansigrey\">                    ^</span>\n<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax\n</div>","workflows":[],"startTime":1514571714301,"submitTime":1514571714301,"finishTime":1514571714653,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4bd71b8c-822a-4123-9cc0-5dcec0bb50b3"},{"version":"CommandV1","origId":2281128122699100,"guid":"8f7f953c-d250-4d28-95bd-991ae7cdd952","subtype":"command","commandType":"auto","position":10.0,"command":"df.columns","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">53</span><span class=\"ansired\">]: </span>\n[&apos;_c0&apos;,\n &apos;carat&apos;,\n &apos;cut&apos;,\n &apos;color&apos;,\n &apos;clarity&apos;,\n &apos;depth&apos;,\n &apos;table&apos;,\n &apos;price&apos;,\n &apos;x&apos;,\n &apos;y&apos;,\n &apos;z&apos;]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514576011385,"submitTime":1514576011377,"finishTime":1514576011459,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"e8be4f3d-c37d-446c-a710-abe92fa7436e"},{"version":"CommandV1","origId":2281128122699101,"guid":"13102542-5e07-4c4b-8d1c-04d385122fa4","subtype":"command","commandType":"auto","position":11.0,"command":"mask = (df['carat'] > .3) & (df['table'] > 60)\ndf2 = df.select('carat','price','table').where(mask)\ndf2.head()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">7</span><span class=\"ansired\">]: </span>Row(carat=0.31, price=353, table=62.0)\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df2","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"carat","nullable":true,"type":"double"},{"metadata":{},"name":"price","nullable":true,"type":"integer"},{"metadata":{},"name":"table","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: show","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699101&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> mask <span class=\"ansiyellow\">=</span> <span class=\"ansiyellow\">(</span>df<span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;carat&apos;</span><span class=\"ansiyellow\">]</span> <span class=\"ansiyellow\">&gt;</span> <span class=\"ansicyan\">.3</span><span class=\"ansiyellow\">)</span> <span class=\"ansiyellow\">&amp;</span> <span class=\"ansiyellow\">(</span>df<span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;table&apos;</span><span class=\"ansiyellow\">]</span> <span class=\"ansiyellow\">&gt;</span> <span class=\"ansicyan\">60</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      2</span> df2 <span class=\"ansiyellow\">=</span> df<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;carat&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;price&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;table&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>where<span class=\"ansiyellow\">(</span>mask<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 3</span><span class=\"ansiyellow\"> </span>df2<span class=\"ansiyellow\">.</span>head<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/types.py</span> in <span class=\"ansicyan\">__getattr__</span><span class=\"ansiblue\">(self, item)</span>\n<span class=\"ansigreen\">   1580</span>             <span class=\"ansigreen\">raise</span> AttributeError<span class=\"ansiyellow\">(</span>item<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1581</span>         <span class=\"ansigreen\">except</span> ValueError<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">-&gt; 1582</span><span class=\"ansiyellow\">             </span><span class=\"ansigreen\">raise</span> AttributeError<span class=\"ansiyellow\">(</span>item<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1583</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1584</span>     <span class=\"ansigreen\">def</span> __setattr__<span class=\"ansiyellow\">(</span>self<span class=\"ansiyellow\">,</span> key<span class=\"ansiyellow\">,</span> value<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: show</div>","workflows":[],"startTime":1514639869648,"submitTime":1514639869638,"finishTime":1514639870125,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"9122c646-2d59-42ab-ae92-cf59e0021839"},{"version":"CommandV1","origId":2281128122699102,"guid":"5f0a68d2-426e-44f6-887a-553afe136626","subtype":"command","commandType":"auto","position":12.0,"command":"df.show(5)\n\n# adding new columns\ndf.withColumn('half_depth',df['depth']*0.5).show(5)\ndf = df.withColumn('volume',df['x']*df['y']*df['z'])\n","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+---+-----+-------+-----+-------+-----+-----+-----+----+----+----+------------------+\n|_c0|carat|    cut|color|clarity|depth|table|price|   x|   y|   z|            Volume|\n+---+-----+-------+-----+-------+-----+-----+-----+----+----+----+------------------+\n|  1| 0.23|  Ideal|    E|    SI2| 61.5| 55.0|  326|3.95|3.98|2.43|          38.20203|\n|  2| 0.21|Premium|    E|    SI1| 59.8| 61.0|  326|3.89|3.84|2.31|         34.505856|\n|  3| 0.23|   Good|    E|    VS1| 56.9| 65.0|  327|4.05|4.07|2.31|         38.076885|\n|  4| 0.29|Premium|    I|    VS2| 62.4| 58.0|  334| 4.2|4.23|2.63|          46.72458|\n|  5| 0.31|   Good|    J|    SI2| 63.3| 58.0|  335|4.34|4.35|2.75|51.917249999999996|\n+---+-----+-------+-----+-------+-----+-----+-----+----+----+----+------------------+\nonly showing top 5 rows\n\n+---+-----+-------+-----+-------+-----+-----+-----+----+----+----+------------------+----------+\n|_c0|carat|    cut|color|clarity|depth|table|price|   x|   y|   z|            Volume|half_depth|\n+---+-----+-------+-----+-------+-----+-----+-----+----+----+----+------------------+----------+\n|  1| 0.23|  Ideal|    E|    SI2| 61.5| 55.0|  326|3.95|3.98|2.43|          38.20203|     30.75|\n|  2| 0.21|Premium|    E|    SI1| 59.8| 61.0|  326|3.89|3.84|2.31|         34.505856|      29.9|\n|  3| 0.23|   Good|    E|    VS1| 56.9| 65.0|  327|4.05|4.07|2.31|         38.076885|     28.45|\n|  4| 0.29|Premium|    I|    VS2| 62.4| 58.0|  334| 4.2|4.23|2.63|          46.72458|      31.2|\n|  5| 0.31|   Good|    J|    SI2| 63.3| 58.0|  335|4.34|4.35|2.75|51.917249999999996|     31.65|\n+---+-----+-------+-----+-------+-----+-----+-----+----+----+----+------------------+----------+\nonly showing top 5 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"_c0","nullable":true,"type":"integer"},{"metadata":{},"name":"carat","nullable":true,"type":"double"},{"metadata":{},"name":"cut","nullable":true,"type":"string"},{"metadata":{},"name":"color","nullable":true,"type":"string"},{"metadata":{},"name":"clarity","nullable":true,"type":"string"},{"metadata":{},"name":"depth","nullable":true,"type":"double"},{"metadata":{},"name":"table","nullable":true,"type":"double"},{"metadata":{},"name":"price","nullable":true,"type":"integer"},{"metadata":{},"name":"x","nullable":true,"type":"double"},{"metadata":{},"name":"y","nullable":true,"type":"double"},{"metadata":{},"name":"z","nullable":true,"type":"double"},{"metadata":{},"name":"volume","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AssertionError</span>: col should be Column","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AssertionError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699102&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      2</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      3</span> <span class=\"ansired\"># adding new columns</span><span class=\"ansiyellow\"></span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 4</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>withColumn<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;depth2&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">      5</span> df<span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansicyan\">5</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.py</span> in <span class=\"ansicyan\">withColumn</span><span class=\"ansiblue\">(self, colName, col)</span>\n<span class=\"ansigreen\">   1640</span>         <span class=\"ansiyellow\">[</span>Row<span class=\"ansiyellow\">(</span>age<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">,</span> name<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;Alice&apos;</span><span class=\"ansiyellow\">,</span> age2<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">4</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> Row<span class=\"ansiyellow\">(</span>age<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">5</span><span class=\"ansiyellow\">,</span> name<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;Bob&apos;</span><span class=\"ansiyellow\">,</span> age2<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">7</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1641</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">-&gt; 1642</span><span class=\"ansiyellow\">         </span><span class=\"ansigreen\">assert</span> isinstance<span class=\"ansiyellow\">(</span>col<span class=\"ansiyellow\">,</span> Column<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> <span class=\"ansiblue\">&quot;col should be Column&quot;</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1643</span>         <span class=\"ansigreen\">return</span> DataFrame<span class=\"ansiyellow\">(</span>self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>withColumn<span class=\"ansiyellow\">(</span>colName<span class=\"ansiyellow\">,</span> col<span class=\"ansiyellow\">.</span>_jc<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> self<span class=\"ansiyellow\">.</span>sql_ctx<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1644</span> <span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AssertionError</span>: col should be Column</div>","workflows":[],"startTime":1514640072322,"submitTime":1514640072306,"finishTime":1514640073337,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4dfe9fc2-85de-4d02-a16f-ca23776e1d9d"},{"version":"CommandV1","origId":2281128122699103,"guid":"7482d297-8873-4e6f-82e7-f175363b6343","subtype":"command","commandType":"auto","position":13.0,"command":"#renaming a column\ndf.withColumnRenamed('carat','new_carat').show(10)","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+---+---------+---------+-----+-------+-----+-----+-----+----+----+----+------------------+\n|_c0|new_carat|      cut|color|clarity|depth|table|price|   x|   y|   z|            volume|\n+---+---------+---------+-----+-------+-----+-----+-----+----+----+----+------------------+\n|  1|     0.23|    Ideal|    E|    SI2| 61.5| 55.0|  326|3.95|3.98|2.43|          38.20203|\n|  2|     0.21|  Premium|    E|    SI1| 59.8| 61.0|  326|3.89|3.84|2.31|         34.505856|\n|  3|     0.23|     Good|    E|    VS1| 56.9| 65.0|  327|4.05|4.07|2.31|         38.076885|\n|  4|     0.29|  Premium|    I|    VS2| 62.4| 58.0|  334| 4.2|4.23|2.63|          46.72458|\n|  5|     0.31|     Good|    J|    SI2| 63.3| 58.0|  335|4.34|4.35|2.75|51.917249999999996|\n|  6|     0.24|Very Good|    J|   VVS2| 62.8| 57.0|  336|3.94|3.96|2.48|38.693951999999996|\n|  7|     0.24|Very Good|    I|   VVS1| 62.3| 57.0|  336|3.95|3.98|2.47|38.830870000000004|\n|  8|     0.26|Very Good|    H|    SI1| 61.9| 55.0|  337|4.07|4.11|2.53|         42.321081|\n|  9|     0.22|     Fair|    E|    VS2| 65.1| 61.0|  337|3.87|3.78|2.49|36.425214000000004|\n| 10|     0.23|Very Good|    H|    VS1| 59.4| 61.0|  338| 4.0|4.05|2.39|            38.718|\n+---+---------+---------+-----+-------+-----+-----+-----+----+----+----+------------------+\nonly showing top 10 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514640074228,"submitTime":1514640074213,"finishTime":1514640074662,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4c743567-0efb-421e-b948-cbdc3915a72f"},{"version":"CommandV1","origId":2281128122699104,"guid":"bf115bc9-2119-4553-941c-4afb858915b8","subtype":"command","commandType":"auto","position":14.0,"command":"df.createOrReplaceTempView(\"diamonds\")","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514640076306,"submitTime":1514640076292,"finishTime":1514640076430,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"693c9ff3-47f1-4840-a467-863502db6838"},{"version":"CommandV1","origId":2281128122699105,"guid":"163ea44f-4f28-435b-ab8f-0a7289652276","subtype":"command","commandType":"auto","position":15.0,"command":"results = spark.sql(\"SELECT * FROM diamonds LIMIT 10\")","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"results","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"_c0","nullable":true,"type":"integer"},{"metadata":{},"name":"carat","nullable":true,"type":"double"},{"metadata":{},"name":"cut","nullable":true,"type":"string"},{"metadata":{},"name":"color","nullable":true,"type":"string"},{"metadata":{},"name":"clarity","nullable":true,"type":"string"},{"metadata":{},"name":"depth","nullable":true,"type":"double"},{"metadata":{},"name":"table","nullable":true,"type":"double"},{"metadata":{},"name":"price","nullable":true,"type":"integer"},{"metadata":{},"name":"x","nullable":true,"type":"double"},{"metadata":{},"name":"y","nullable":true,"type":"double"},{"metadata":{},"name":"z","nullable":true,"type":"double"},{"metadata":{},"name":"volume","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AnalysisException</span>: u&apos;Table or view not found: diamonds; line 1 pos 14&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699105&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>results <span class=\"ansiyellow\">=</span> spark<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&quot;SELECT * FROM diamonds LIMIT 10&quot;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/session.py</span> in <span class=\"ansicyan\">sql</span><span class=\"ansiblue\">(self, sqlQuery)</span>\n<span class=\"ansigreen\">    554</span>         <span class=\"ansiyellow\">[</span>Row<span class=\"ansiyellow\">(</span>f1<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">,</span> f2<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;row1&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> Row<span class=\"ansiyellow\">(</span>f1<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">,</span> f2<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;row2&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> Row<span class=\"ansiyellow\">(</span>f1<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">3</span><span class=\"ansiyellow\">,</span> f2<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;row3&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    555</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">--&gt; 556</span><span class=\"ansiyellow\">         </span><span class=\"ansigreen\">return</span> DataFrame<span class=\"ansiyellow\">(</span>self<span class=\"ansiyellow\">.</span>_jsparkSession<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">(</span>sqlQuery<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> self<span class=\"ansiyellow\">.</span>_wrapped<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    557</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    558</span>     <span class=\"ansiyellow\">@</span>since<span class=\"ansiyellow\">(</span><span class=\"ansicyan\">2.0</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     67</span>                                              e.java_exception.getStackTrace()))\n<span class=\"ansigreen\">     68</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.AnalysisException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 69</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     70</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.analysis&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AnalysisException</span>: u&apos;Table or view not found: diamonds; line 1 pos 14&apos;</div>","workflows":[],"startTime":1514640078182,"submitTime":1514640078167,"finishTime":1514640078308,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"54e3e755-ee27-4889-aa83-8b015ba04763"},{"version":"CommandV1","origId":2281128122699106,"guid":"50cfd38d-8d70-46f0-a057-ac5e19056f09","subtype":"command","commandType":"auto","position":16.0,"command":"results.show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+---+-----+---------+-----+-------+-----+-----+-----+----+----+----+------------------+\n|_c0|carat|      cut|color|clarity|depth|table|price|   x|   y|   z|            volume|\n+---+-----+---------+-----+-------+-----+-----+-----+----+----+----+------------------+\n|  1| 0.23|    Ideal|    E|    SI2| 61.5| 55.0|  326|3.95|3.98|2.43|          38.20203|\n|  2| 0.21|  Premium|    E|    SI1| 59.8| 61.0|  326|3.89|3.84|2.31|         34.505856|\n|  3| 0.23|     Good|    E|    VS1| 56.9| 65.0|  327|4.05|4.07|2.31|         38.076885|\n|  4| 0.29|  Premium|    I|    VS2| 62.4| 58.0|  334| 4.2|4.23|2.63|          46.72458|\n|  5| 0.31|     Good|    J|    SI2| 63.3| 58.0|  335|4.34|4.35|2.75|51.917249999999996|\n|  6| 0.24|Very Good|    J|   VVS2| 62.8| 57.0|  336|3.94|3.96|2.48|38.693951999999996|\n|  7| 0.24|Very Good|    I|   VVS1| 62.3| 57.0|  336|3.95|3.98|2.47|38.830870000000004|\n|  8| 0.26|Very Good|    H|    SI1| 61.9| 55.0|  337|4.07|4.11|2.53|         42.321081|\n|  9| 0.22|     Fair|    E|    VS2| 65.1| 61.0|  337|3.87|3.78|2.49|36.425214000000004|\n| 10| 0.23|Very Good|    H|    VS1| 59.4| 61.0|  338| 4.0|4.05|2.39|            38.718|\n+---+-----+---------+-----+-------+-----+-----+-----+----+----+----+------------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514640080372,"submitTime":1514640080359,"finishTime":1514640080848,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c5200f36-da00-41c4-b882-3546b7109363"},{"version":"CommandV1","origId":2281128122699107,"guid":"f5b0e175-9779-4ec8-9dbb-d99dc8097aaa","subtype":"command","commandType":"auto","position":17.0,"command":"results = spark.sql(\"SELECT price, x,y,z, volume FROM diamonds WHERE volume > 50\")","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"results","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"price","nullable":true,"type":"integer"},{"metadata":{},"name":"x","nullable":true,"type":"double"},{"metadata":{},"name":"y","nullable":true,"type":"double"},{"metadata":{},"name":"z","nullable":true,"type":"double"},{"metadata":{},"name":"volume","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">AnalysisException</span>: u&quot;cannot resolve &apos;&#96;volume&#96;&apos; given input columns: [diamonds.y, diamonds.table, diamonds.depth, diamonds.z, diamonds.carat, diamonds.color, diamonds.clarity, diamonds._c0, diamonds.price, diamonds.x, diamonds.cut]; line 1 pos 40;\\n&apos;Project [&apos;price, &apos;x, &apos;y, &apos;z]\\n+- &apos;Filter (&apos;volume &gt; 50)\\n   +- SubqueryAlias diamonds\\n      +- Relation[_c0#19,carat#20,cut#21,color#22,clarity#23,depth#24,table#25,price#26,x#27,y#28,z#29] csv\\n&quot;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-2281128122699107&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>results <span class=\"ansiyellow\">=</span> spark<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&quot;SELECT price, x,y,z FROM diamonds WHERE volume &gt; 50&quot;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/session.py</span> in <span class=\"ansicyan\">sql</span><span class=\"ansiblue\">(self, sqlQuery)</span>\n<span class=\"ansigreen\">    554</span>         <span class=\"ansiyellow\">[</span>Row<span class=\"ansiyellow\">(</span>f1<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">,</span> f2<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;row1&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> Row<span class=\"ansiyellow\">(</span>f1<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">2</span><span class=\"ansiyellow\">,</span> f2<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;row2&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> Row<span class=\"ansiyellow\">(</span>f1<span class=\"ansiyellow\">=</span><span class=\"ansicyan\">3</span><span class=\"ansiyellow\">,</span> f2<span class=\"ansiyellow\">=</span><span class=\"ansiblue\">u&apos;row3&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    555</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">--&gt; 556</span><span class=\"ansiyellow\">         </span><span class=\"ansigreen\">return</span> DataFrame<span class=\"ansiyellow\">(</span>self<span class=\"ansiyellow\">.</span>_jsparkSession<span class=\"ansiyellow\">.</span>sql<span class=\"ansiyellow\">(</span>sqlQuery<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">,</span> self<span class=\"ansiyellow\">.</span>_wrapped<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    557</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    558</span>     <span class=\"ansiyellow\">@</span>since<span class=\"ansiyellow\">(</span><span class=\"ansicyan\">2.0</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     67</span>                                              e.java_exception.getStackTrace()))\n<span class=\"ansigreen\">     68</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.AnalysisException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 69</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     70</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.analysis&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AnalysisException</span>: u&quot;cannot resolve &apos;&#96;volume&#96;&apos; given input columns: [diamonds.y, diamonds.table, diamonds.depth, diamonds.z, diamonds.carat, diamonds.color, diamonds.clarity, diamonds._c0, diamonds.price, diamonds.x, diamonds.cut]; line 1 pos 40;\\n&apos;Project [&apos;price, &apos;x, &apos;y, &apos;z]\\n+- &apos;Filter (&apos;volume &gt; 50)\\n   +- SubqueryAlias diamonds\\n      +- Relation[_c0#19,carat#20,cut#21,color#22,clarity#23,depth#24,table#25,price#26,x#27,y#28,z#29] csv\\n&quot;</div>","workflows":[],"startTime":1514640096756,"submitTime":1514640096741,"finishTime":1514640096832,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ddb15faa-4c97-41e2-ac78-abf182eb5479"},{"version":"CommandV1","origId":2281128122699108,"guid":"a858d630-1a48-401b-a605-9bdc8935326c","subtype":"command","commandType":"auto","position":18.0,"command":"results.show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-----+----+----+----+------------------+\n|price|   x|   y|   z|            volume|\n+-----+----+----+----+------------------+\n|  335|4.34|4.35|2.75|51.917249999999996|\n|  344|4.35|4.37|2.71|51.515744999999995|\n|  345|4.38|4.42|2.68|51.883728000000005|\n|  348|4.31|4.34|2.68|         50.130472|\n|  353|4.39|4.43|2.62|         50.952974|\n|  353|4.44|4.47|2.59|         51.403212|\n|  402|4.29|4.31|2.75|50.847224999999995|\n|  403|4.49|4.51|2.78|         56.294722|\n|  403|4.49| 4.5|2.75|55.563750000000006|\n|  403|4.49|4.55|2.76|56.385419999999996|\n|  403|4.34|4.37|2.75|52.155950000000004|\n|  403|4.35|4.42|2.71|52.105169999999994|\n|  403|4.36|4.38|2.79|53.280072000000004|\n|  404|4.45|4.48|2.72|54.225920000000016|\n|  405|4.43|4.38|2.61| 50.64287399999999|\n|  405|4.28|4.32|2.71| 50.10681600000001|\n|  552|4.54|4.59|2.78|57.931307999999994|\n|  552|4.78|4.84|2.96|         68.480192|\n|  553|4.39|4.42|2.73| 52.97237399999999|\n|  553|4.33| 4.3|2.73|          50.82987|\n+-----+----+----+----+------------------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514640099942,"submitTime":1514640099928,"finishTime":1514640100417,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b3e399f2-e642-4ea7-9994-10e4671ce366"},{"version":"CommandV1","origId":2281128122699109,"guid":"29fa1897-1869-40cd-9bf9-58c262d52eff","subtype":"command","commandType":"auto","position":19.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ea991505-6fe7-411d-b7a9-245c54adca05"},{"version":"CommandV1","origId":3224681036817975,"guid":"3a540b92-b429-4156-b5cc-d1359af90ae9","subtype":"command","commandType":"auto","position":2.0,"command":"from pyspark.sql import SparkSession\nimport pyspark","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514638630129,"submitTime":1514638596785,"finishTime":1514638630322,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3256edfc-2835-49f1-8a01-3d4138322368"},{"version":"CommandV1","origId":3224681036817976,"guid":"b5d6fcb5-9d56-42b2-8f60-932e35d8bd4f","subtype":"command","commandType":"auto","position":3.0,"command":"spark = SparkSession.builder.appName(\"Basics\").getOrCreate()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514638630491,"submitTime":1514638597610,"finishTime":1514638630524,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"139ec09d-1a30-48fe-8b16-3d9d54da5948"},{"version":"CommandV1","origId":3224681036817977,"guid":"a8afc989-0173-48e8-ac34-a1a345fc66af","subtype":"command","commandType":"auto","position":4.0,"command":"dataPath = \"/databricks-datasets/Rdatasets/data-001/csv/ggplot2/diamonds.csv\"\ndf = spark.read.format(\"com.databricks.spark.csv\")\\\n  .option(\"header\",\"true\")\\\n  .option(\"inferSchema\", \"true\")\\\n  .load(dataPath)\ndf.show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+---+-----+---------+-----+-------+-----+-----+-----+----+----+----+\n|_c0|carat|      cut|color|clarity|depth|table|price|   x|   y|   z|\n+---+-----+---------+-----+-------+-----+-----+-----+----+----+----+\n|  1| 0.23|    Ideal|    E|    SI2| 61.5| 55.0|  326|3.95|3.98|2.43|\n|  2| 0.21|  Premium|    E|    SI1| 59.8| 61.0|  326|3.89|3.84|2.31|\n|  3| 0.23|     Good|    E|    VS1| 56.9| 65.0|  327|4.05|4.07|2.31|\n|  4| 0.29|  Premium|    I|    VS2| 62.4| 58.0|  334| 4.2|4.23|2.63|\n|  5| 0.31|     Good|    J|    SI2| 63.3| 58.0|  335|4.34|4.35|2.75|\n|  6| 0.24|Very Good|    J|   VVS2| 62.8| 57.0|  336|3.94|3.96|2.48|\n|  7| 0.24|Very Good|    I|   VVS1| 62.3| 57.0|  336|3.95|3.98|2.47|\n|  8| 0.26|Very Good|    H|    SI1| 61.9| 55.0|  337|4.07|4.11|2.53|\n|  9| 0.22|     Fair|    E|    VS2| 65.1| 61.0|  337|3.87|3.78|2.49|\n| 10| 0.23|Very Good|    H|    VS1| 59.4| 61.0|  338| 4.0|4.05|2.39|\n| 11|  0.3|     Good|    J|    SI1| 64.0| 55.0|  339|4.25|4.28|2.73|\n| 12| 0.23|    Ideal|    J|    VS1| 62.8| 56.0|  340|3.93| 3.9|2.46|\n| 13| 0.22|  Premium|    F|    SI1| 60.4| 61.0|  342|3.88|3.84|2.33|\n| 14| 0.31|    Ideal|    J|    SI2| 62.2| 54.0|  344|4.35|4.37|2.71|\n| 15|  0.2|  Premium|    E|    SI2| 60.2| 62.0|  345|3.79|3.75|2.27|\n| 16| 0.32|  Premium|    E|     I1| 60.9| 58.0|  345|4.38|4.42|2.68|\n| 17|  0.3|    Ideal|    I|    SI2| 62.0| 54.0|  348|4.31|4.34|2.68|\n| 18|  0.3|     Good|    J|    SI1| 63.4| 54.0|  351|4.23|4.29| 2.7|\n| 19|  0.3|     Good|    J|    SI1| 63.8| 56.0|  351|4.23|4.26|2.71|\n| 20|  0.3|Very Good|    J|    SI1| 62.7| 59.0|  351|4.21|4.27|2.66|\n+---+-----+---------+-----+-------+-----+-----+-----+----+----+----+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"_c0","nullable":true,"type":"integer"},{"metadata":{},"name":"carat","nullable":true,"type":"double"},{"metadata":{},"name":"cut","nullable":true,"type":"string"},{"metadata":{},"name":"color","nullable":true,"type":"string"},{"metadata":{},"name":"clarity","nullable":true,"type":"string"},{"metadata":{},"name":"depth","nullable":true,"type":"double"},{"metadata":{},"name":"table","nullable":true,"type":"double"},{"metadata":{},"name":"price","nullable":true,"type":"integer"},{"metadata":{},"name":"x","nullable":true,"type":"double"},{"metadata":{},"name":"y","nullable":true,"type":"double"},{"metadata":{},"name":"z","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">IndentationError</span><span class=\"ansired\">:</span> unexpected indent","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-3224681036817977&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">3</span>\n<span class=\"ansiyellow\">    .option(&quot;header&quot;,&quot;true&quot;)    .option(&quot;inferSchema&quot;, &quot;true&quot;)    .load(dataPath)</span>\n<span class=\"ansigrey\">    ^</span>\n<span class=\"ansired\">IndentationError</span><span class=\"ansired\">:</span> unexpected indent\n</div>","workflows":[],"startTime":1514638630539,"submitTime":1514638598662,"finishTime":1514638635797,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"86df7a2b-b8ef-4d5e-95eb-d19c2ed1bb71"}],"dashboards":[],"guid":"0c1558a0-1fb4-402a-948d-c8eff2f0f7d9","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}