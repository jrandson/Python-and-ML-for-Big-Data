{"version":"NotebookV1","origId":843068537729712,"name":"Basic Data Frames","language":"python","commands":[{"version":"CommandV1","origId":843068537729713,"guid":"644c7ae4-0795-43af-8637-f07e1780ebc9","subtype":"command","commandType":"auto","position":1.0,"command":"df.printSchema()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">root\n |-- UNITID: integer (nullable = true)\n |-- OPEID: integer (nullable = true)\n |-- OPEID6: integer (nullable = true)\n |-- INSTNM: string (nullable = true)\n |-- COUNT_ED: string (nullable = true)\n |-- AGEGE24: double (nullable = true)\n |-- PCT_WHITE: double (nullable = true)\n |-- PCT_BLACK: double (nullable = true)\n |-- PCT_ASIAN: double (nullable = true)\n |-- PCT_HISPANIC: double (nullable = true)\n |-- PCT_BA: double (nullable = true)\n |-- PCT_GRAD_PROF: double (nullable = true)\n |-- PCT_BORN_US: double (nullable = true)\n |-- MEDIAN_HH_INC: double (nullable = true)\n |-- POVERTY_RATE: double (nullable = true)\n |-- UNEMP_RATE: double (nullable = true)\n |-- LN_MEDIAN_HH_INC: double (nullable = true)\n |-- COUNT_NWNE_P10: integer (nullable = true)\n |-- COUNT_WNE_P10: integer (nullable = true)\n |-- MN_EARN_WNE_P10: integer (nullable = true)\n |-- MD_EARN_WNE_P10: integer (nullable = true)\n |-- PCT10_EARN_WNE_P10: integer (nullable = true)\n |-- PCT25_EARN_WNE_P10: integer (nullable = true)\n |-- PCT75_EARN_WNE_P10: integer (nullable = true)\n |-- PCT90_EARN_WNE_P10: integer (nullable = true)\n |-- SD_EARN_WNE_P10: integer (nullable = true)\n |-- COUNT_WNE_INC1_P10: integer (nullable = true)\n |-- COUNT_WNE_INC2_P10: integer (nullable = true)\n |-- COUNT_WNE_INC3_P10: string (nullable = true)\n |-- COUNT_WNE_INDEP0_INC1_P10: string (nullable = true)\n |-- COUNT_WNE_INDEP0_P10: string (nullable = true)\n |-- COUNT_WNE_INDEP1_P10: string (nullable = true)\n |-- COUNT_WNE_MALE0_P10: integer (nullable = true)\n |-- COUNT_WNE_MALE1_P10: integer (nullable = true)\n |-- GT_25K_P10: double (nullable = true)\n |-- MN_EARN_WNE_INC1_P10: string (nullable = true)\n |-- MN_EARN_WNE_INC2_P10: string (nullable = true)\n |-- MN_EARN_WNE_INC3_P10: string (nullable = true)\n |-- MN_EARN_WNE_INDEP0_INC1_P10: string (nullable = true)\n |-- MN_EARN_WNE_INDEP0_P10: string (nullable = true)\n |-- MN_EARN_WNE_INDEP1_P10: string (nullable = true)\n |-- MN_EARN_WNE_MALE0_P10: integer (nullable = true)\n |-- MN_EARN_WNE_MALE1_P10: integer (nullable = true)\n |-- COUNT_NWNE_P6: string (nullable = true)\n |-- COUNT_WNE_P6: integer (nullable = true)\n |-- MN_EARN_WNE_P6: integer (nullable = true)\n |-- MD_EARN_WNE_P6: integer (nullable = true)\n |-- PCT10_EARN_WNE_P6: integer (nullable = true)\n |-- PCT25_EARN_WNE_P6: integer (nullable = true)\n |-- PCT75_EARN_WNE_P6: integer (nullable = true)\n |-- PCT90_EARN_WNE_P6: integer (nullable = true)\n |-- SD_EARN_WNE_P6: integer (nullable = true)\n |-- COUNT_WNE_INC1_P6: integer (nullable = true)\n |-- COUNT_WNE_INC2_P6: integer (nullable = true)\n |-- COUNT_WNE_INC3_P6: string (nullable = true)\n |-- COUNT_WNE_INDEP0_INC1_P6: string (nullable = true)\n |-- COUNT_WNE_INDEP0_P6: string (nullable = true)\n |-- COUNT_WNE_INDEP1_P6: string (nullable = true)\n |-- COUNT_WNE_MALE0_P6: integer (nullable = true)\n |-- COUNT_WNE_MALE1_P6: integer (nullable = true)\n |-- GT_25K_P6: double (nullable = true)\n |-- MN_EARN_WNE_INC1_P6: integer (nullable = true)\n |-- MN_EARN_WNE_INC2_P6: string (nullable = true)\n |-- MN_EARN_WNE_INC3_P6: string (nullable = true)\n |-- MN_EARN_WNE_INDEP0_INC1_P6: string (nullable = true)\n |-- MN_EARN_WNE_INDEP0_P6: string (nullable = true)\n |-- MN_EARN_WNE_INDEP1_P6: string (nullable = true)\n |-- MN_EARN_WNE_MALE0_P6: integer (nullable = true)\n |-- MN_EARN_WNE_MALE1_P6: integer (nullable = true)\n |-- COUNT_NWNE_P7: integer (nullable = true)\n |-- COUNT_WNE_P7: integer (nullable = true)\n |-- MN_EARN_WNE_P7: integer (nullable = true)\n |-- SD_EARN_WNE_P7: integer (nullable = true)\n |-- GT_25K_P7: double (nullable = true)\n |-- COUNT_NWNE_P8: string (nullable = true)\n |-- COUNT_WNE_P8: integer (nullable = true)\n |-- MN_EARN_WNE_P8: integer (nullable = true)\n |-- MD_EARN_WNE_P8: integer (nullable = true)\n |-- PCT10_EARN_WNE_P8: integer (nullable = true)\n |-- PCT25_EARN_WNE_P8: integer (nullable = true)\n |-- PCT75_EARN_WNE_P8: integer (nullable = true)\n |-- PCT90_EARN_WNE_P8: integer (nullable = true)\n |-- SD_EARN_WNE_P8: integer (nullable = true)\n |-- GT_25K_P8: double (nullable = true)\n |-- COUNT_NWNE_P9: integer (nullable = true)\n |-- COUNT_WNE_P9: integer (nullable = true)\n |-- MN_EARN_WNE_P9: integer (nullable = true)\n |-- SD_EARN_WNE_P9: integer (nullable = true)\n |-- GT_25K_P9: double (nullable = true)\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">NameError</span>: name &apos;dfprintSchema&apos; is not defined","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729713&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>dfprintSchema<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">NameError</span>: name &apos;dfprintSchema&apos; is not defined</div>","workflows":[],"startTime":1514642020586,"submitTime":1514642020578,"finishTime":1514642020658,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f8c83206-3694-4e61-8fc8-a03c3c119793"},{"version":"CommandV1","origId":843068537729715,"guid":"295a5a89-12f6-4854-a9e3-2af73c74e13c","subtype":"command","commandType":"auto","position":0.5,"command":"from pyspark.sql import SparkSession\nimport pyspark\n\n#%fs ls databricks-datasets/data.gov/irs_zip_code_data/data-001/2013_soi_zipcode_agi.csv\n#https://catalog.data.gov/dataset?res_format=CSV&res_format=JSON\n\nspark = SparkSession.builder.appName(\"Most Recent Cohorts\").getOrCreate()\n\ndataPath = '/FileStore/tables/Most_Recent_Cohorts_Treasury_Elements-26995.csv'\ndf = spark.read.format(\"com.databricks.spark.csv\")\\\n  .option(\"header\",\"true\")\\\n  .option(\"inferSchema\", \"true\")\\\n  .load(dataPath)\ndf[df.columns[:10]].show(10)","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+-------+------+--------------------+--------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|  OPEID|OPEID6|              INSTNM|COUNT_ED|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|\n+------+-------+------+--------------------+--------+----------------+----------------+----------------+----------------+----------------+\n|100654| 100200|  1002|Alabama A &amp; M Uni...|    NULL|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348|3.78999996185302|\n|100663| 105200|  1052|University of Ala...|    NULL|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185|2.02999997138977|\n|100690|2503400| 25034|  Amridge University|    NULL|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302|6.94000005722046|\n|100706| 105500|  1055|University of Ala...|    NULL|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465|2.54999995231628|\n|100724| 100500|  1005|Alabama State Uni...|    NULL|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139|4.09000015258789|\n|100751| 105100|  1051|The University of...|    NULL|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371|2.41000008583068|\n|100760| 100700|  1007|Central Alabama C...|    NULL|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|\n|100812| 100800|  1008|Athens State Univ...|    NULL|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|\n|100830| 831000|  8310|Auburn University...|    NULL|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|\n|100858| 100900|  1009|   Auburn University|    NULL|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814|2.89000010490417|\n+------+-------+------+--------------------+--------+----------------+----------------+----------------+----------------+----------------+\nonly showing top 10 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"UNITID","nullable":true,"type":"integer"},{"metadata":{},"name":"OPEID","nullable":true,"type":"integer"},{"metadata":{},"name":"OPEID6","nullable":true,"type":"integer"},{"metadata":{},"name":"INSTNM","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_ED","nullable":true,"type":"string"},{"metadata":{},"name":"AGEGE24","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_WHITE","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_BLACK","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_ASIAN","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_HISPANIC","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_BA","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_GRAD_PROF","nullable":true,"type":"double"},{"metadata":{},"name":"PCT_BORN_US","nullable":true,"type":"double"},{"metadata":{},"name":"MEDIAN_HH_INC","nullable":true,"type":"double"},{"metadata":{},"name":"POVERTY_RATE","nullable":true,"type":"double"},{"metadata":{},"name":"UNEMP_RATE","nullable":true,"type":"double"},{"metadata":{},"name":"LN_MEDIAN_HH_INC","nullable":true,"type":"double"},{"metadata":{},"name":"COUNT_NWNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"MD_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT10_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT25_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT75_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT90_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"SD_EARN_WNE_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_INC1_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_INC2_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_INC3_P10","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_INDEP0_INC1_P10","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_INDEP0_P10","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_INDEP1_P10","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_MALE0_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_MALE1_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"GT_25K_P10","nullable":true,"type":"double"},{"metadata":{},"name":"MN_EARN_WNE_INC1_P10","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INC2_P10","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INC3_P10","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INDEP0_INC1_P10","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INDEP0_P10","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INDEP1_P10","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_MALE0_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_MALE1_P10","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_NWNE_P6","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"MD_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT10_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT25_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT75_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT90_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"SD_EARN_WNE_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_INC1_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_INC2_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_INC3_P6","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_INDEP0_INC1_P6","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_INDEP0_P6","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_INDEP1_P6","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_MALE0_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_MALE1_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"GT_25K_P6","nullable":true,"type":"double"},{"metadata":{},"name":"MN_EARN_WNE_INC1_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_INC2_P6","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INC3_P6","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INDEP0_INC1_P6","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INDEP0_P6","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_INDEP1_P6","nullable":true,"type":"string"},{"metadata":{},"name":"MN_EARN_WNE_MALE0_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_MALE1_P6","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_NWNE_P7","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_P7","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_P7","nullable":true,"type":"integer"},{"metadata":{},"name":"SD_EARN_WNE_P7","nullable":true,"type":"integer"},{"metadata":{},"name":"GT_25K_P7","nullable":true,"type":"double"},{"metadata":{},"name":"COUNT_NWNE_P8","nullable":true,"type":"string"},{"metadata":{},"name":"COUNT_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"MD_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT10_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT25_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT75_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"PCT90_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"SD_EARN_WNE_P8","nullable":true,"type":"integer"},{"metadata":{},"name":"GT_25K_P8","nullable":true,"type":"double"},{"metadata":{},"name":"COUNT_NWNE_P9","nullable":true,"type":"integer"},{"metadata":{},"name":"COUNT_WNE_P9","nullable":true,"type":"integer"},{"metadata":{},"name":"MN_EARN_WNE_P9","nullable":true,"type":"integer"},{"metadata":{},"name":"SD_EARN_WNE_P9","nullable":true,"type":"integer"},{"metadata":{},"name":"GT_25K_P9","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">IndentationError</span><span class=\"ansired\">:</span> unexpected indent","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-843068537729715&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">8</span>\n<span class=\"ansiyellow\">    .option(&quot;inferSchema&quot;,&quot;true&quot;)  .load(dataPath)</span>\n<span class=\"ansigrey\">    ^</span>\n<span class=\"ansired\">IndentationError</span><span class=\"ansired\">:</span> unexpected indent\n</div>","workflows":[],"startTime":1514658444383,"submitTime":1514658444370,"finishTime":1514658446500,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"48d81a2c-58b9-4771-9ba8-d13fa1ce42e4"},{"version":"CommandV1","origId":843068537729716,"guid":"bd52ae74-da19-46af-a01f-cd51ba5c5d44","subtype":"command","commandType":"auto","position":2.0,"command":"df.head(3)","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">36</span><span class=\"ansired\">]: </span>\n[Row(UNITID=100654, OPEID=100200, OPEID6=1002, INSTNM=u&apos;Alabama A &amp; M University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.07999999821186, PCT_WHITE=46.8400001525878, PCT_BLACK=47.9799995422363, PCT_ASIAN=1.48000001907348, PCT_HISPANIC=3.78999996185302, PCT_BA=13.0, PCT_GRAD_PROF=6.8600001335144, PCT_BORN_US=94.7399978637695, MEDIAN_HH_INC=49720.22, POVERTY_RATE=14.8800001144409, UNEMP_RATE=4.84000015258789, LN_MEDIAN_HH_INC=10.75, COUNT_NWNE_P10=246, COUNT_WNE_P10=1741, MN_EARN_WNE_P10=34300, MD_EARN_WNE_P10=29900, PCT10_EARN_WNE_P10=6700, PCT25_EARN_WNE_P10=17200, PCT75_EARN_WNE_P10=45100, PCT90_EARN_WNE_P10=70000, SD_EARN_WNE_P10=25300, COUNT_WNE_INC1_P10=915, COUNT_WNE_INC2_P10=550, COUNT_WNE_INC3_P10=u&apos;276&apos;, COUNT_WNE_INDEP0_INC1_P10=u&apos;565&apos;, COUNT_WNE_INDEP0_P10=u&apos;1428&apos;, COUNT_WNE_INDEP1_P10=u&apos;313&apos;, COUNT_WNE_MALE0_P10=828, COUNT_WNE_MALE1_P10=913, GT_25K_P10=0.599, MN_EARN_WNE_INC1_P10=u&apos;33000&apos;, MN_EARN_WNE_INC2_P10=u&apos;35500&apos;, MN_EARN_WNE_INC3_P10=u&apos;36100&apos;, MN_EARN_WNE_INDEP0_INC1_P10=u&apos;32700&apos;, MN_EARN_WNE_INDEP0_P10=u&apos;33900&apos;, MN_EARN_WNE_INDEP1_P10=u&apos;36300&apos;, MN_EARN_WNE_MALE0_P10=31500, MN_EARN_WNE_MALE1_P10=36900, COUNT_NWNE_P6=u&apos;116&apos;, COUNT_WNE_P6=1187, MN_EARN_WNE_P6=27200, MD_EARN_WNE_P6=23100, PCT10_EARN_WNE_P6=4500, PCT25_EARN_WNE_P6=13800, PCT75_EARN_WNE_P6=35300, PCT90_EARN_WNE_P6=51400, SD_EARN_WNE_P6=24200, COUNT_WNE_INC1_P6=606, COUNT_WNE_INC2_P6=403, COUNT_WNE_INC3_P6=u&apos;178&apos;, COUNT_WNE_INDEP0_INC1_P6=u&apos;442&apos;, COUNT_WNE_INDEP0_P6=u&apos;1038&apos;, COUNT_WNE_INDEP1_P6=u&apos;149&apos;, COUNT_WNE_MALE0_P6=562, COUNT_WNE_MALE1_P6=625, GT_25K_P6=0.453, MN_EARN_WNE_INC1_P6=25600, MN_EARN_WNE_INC2_P6=u&apos;28100&apos;, MN_EARN_WNE_INC3_P6=u&apos;30600&apos;, MN_EARN_WNE_INDEP0_INC1_P6=u&apos;23900&apos;, MN_EARN_WNE_INDEP0_P6=u&apos;26900&apos;, MN_EARN_WNE_INDEP1_P6=u&apos;29500&apos;, MN_EARN_WNE_MALE0_P6=25900, MN_EARN_WNE_MALE1_P6=28400, COUNT_NWNE_P7=201, COUNT_WNE_P7=1363, MN_EARN_WNE_P7=29600, SD_EARN_WNE_P7=23200, GT_25K_P7=0.53044754266738, COUNT_NWNE_P8=u&apos;155&apos;, COUNT_WNE_P8=1441, MN_EARN_WNE_P8=29700, MD_EARN_WNE_P8=26600, PCT10_EARN_WNE_P8=5100, PCT25_EARN_WNE_P8=15100, PCT75_EARN_WNE_P8=38700, PCT90_EARN_WNE_P8=60700, SD_EARN_WNE_P8=21500, GT_25K_P8=0.544, COUNT_NWNE_P9=215, COUNT_WNE_P9=1480, MN_EARN_WNE_P9=33800, SD_EARN_WNE_P9=27500, GT_25K_P9=0.58783781528472),\n Row(UNITID=100663, OPEID=105200, OPEID6=1052, INSTNM=u&apos;University of Alabama at Birmingham&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.25999999046325, PCT_WHITE=69.0199966430664, PCT_BLACK=27.7600002288818, PCT_ASIAN=1.10000002384185, PCT_HISPANIC=2.02999997138977, PCT_BA=15.9300003051757, PCT_GRAD_PROF=8.55000019073486, PCT_BORN_US=96.5, MEDIAN_HH_INC=55735.22, POVERTY_RATE=10.9099998474121, UNEMP_RATE=3.45000004768371, LN_MEDIAN_HH_INC=10.8599996566772, COUNT_NWNE_P10=470, COUNT_WNE_P10=3474, MN_EARN_WNE_P10=46400, MD_EARN_WNE_P10=40200, PCT10_EARN_WNE_P10=10900, PCT25_EARN_WNE_P10=24900, PCT75_EARN_WNE_P10=57600, PCT90_EARN_WNE_P10=84000, SD_EARN_WNE_P10=36300, COUNT_WNE_INC1_P10=1523, COUNT_WNE_INC2_P10=1090, COUNT_WNE_INC3_P10=u&apos;861&apos;, COUNT_WNE_INDEP0_INC1_P10=u&apos;510&apos;, COUNT_WNE_INDEP0_P10=u&apos;2185&apos;, COUNT_WNE_INDEP1_P10=u&apos;1289&apos;, COUNT_WNE_MALE0_P10=2176, COUNT_WNE_MALE1_P10=1298, GT_25K_P10=0.747, MN_EARN_WNE_INC1_P10=u&apos;45600&apos;, MN_EARN_WNE_INC2_P10=u&apos;45900&apos;, MN_EARN_WNE_INC3_P10=u&apos;48600&apos;, MN_EARN_WNE_INDEP0_INC1_P10=u&apos;41300&apos;, MN_EARN_WNE_INDEP0_P10=u&apos;42200&apos;, MN_EARN_WNE_INDEP1_P10=u&apos;53600&apos;, MN_EARN_WNE_MALE0_P10=41800, MN_EARN_WNE_MALE1_P10=54200, COUNT_NWNE_P6=u&apos;248&apos;, COUNT_WNE_P6=2665, MN_EARN_WNE_P6=38300, MD_EARN_WNE_P6=34000, PCT10_EARN_WNE_P6=9700, PCT25_EARN_WNE_P6=20600, PCT75_EARN_WNE_P6=49500, PCT90_EARN_WNE_P6=66200, SD_EARN_WNE_P6=29800, COUNT_WNE_INC1_P6=1109, COUNT_WNE_INC2_P6=849, COUNT_WNE_INC3_P6=u&apos;707&apos;, COUNT_WNE_INDEP0_INC1_P6=u&apos;496&apos;, COUNT_WNE_INDEP0_P6=u&apos;1684&apos;, COUNT_WNE_INDEP1_P6=u&apos;981&apos;, COUNT_WNE_MALE0_P6=1687, COUNT_WNE_MALE1_P6=978, GT_25K_P6=0.669, MN_EARN_WNE_INC1_P6=38400, MN_EARN_WNE_INC2_P6=u&apos;37700&apos;, MN_EARN_WNE_INC3_P6=u&apos;38700&apos;, MN_EARN_WNE_INDEP0_INC1_P6=u&apos;31100&apos;, MN_EARN_WNE_INDEP0_P6=u&apos;33400&apos;, MN_EARN_WNE_INDEP1_P6=u&apos;46600&apos;, MN_EARN_WNE_MALE0_P6=35700, MN_EARN_WNE_MALE1_P6=42700, COUNT_NWNE_P7=352, COUNT_WNE_P7=2971, MN_EARN_WNE_P7=40000, SD_EARN_WNE_P7=30400, GT_25K_P7=0.69336920976638, COUNT_NWNE_P8=u&apos;348&apos;, COUNT_WNE_P8=3080, MN_EARN_WNE_P8=42500, MD_EARN_WNE_P8=36500, PCT10_EARN_WNE_P8=9900, PCT25_EARN_WNE_P8=23300, PCT75_EARN_WNE_P8=52600, PCT90_EARN_WNE_P8=74700, SD_EARN_WNE_P8=36700, GT_25K_P8=0.722, COUNT_NWNE_P9=347, COUNT_WNE_P9=2592, MN_EARN_WNE_P9=44500, SD_EARN_WNE_P9=38600, GT_25K_P9=0.73726850748062),\n Row(UNITID=100690, OPEID=2503400, OPEID6=25034, INSTNM=u&apos;Amridge University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.82999998331069, PCT_WHITE=70.8799972534179, PCT_BLACK=22.5300006866455, PCT_ASIAN=1.28999996185302, PCT_HISPANIC=6.94000005722046, PCT_BA=13.2299995422363, PCT_GRAD_PROF=7.01000022888183, PCT_BORN_US=94.0899963378906, MEDIAN_HH_INC=53683.7, POVERTY_RATE=10.6499996185302, UNEMP_RATE=3.59999990463256, LN_MEDIAN_HH_INC=10.8400001525878, COUNT_NWNE_P10=57, COUNT_WNE_P10=168, MN_EARN_WNE_P10=46100, MD_EARN_WNE_P10=40100, PCT10_EARN_WNE_P10=6800, PCT25_EARN_WNE_P10=22900, PCT75_EARN_WNE_P10=59900, PCT90_EARN_WNE_P10=79500, SD_EARN_WNE_P10=34900, COUNT_WNE_INC1_P10=61, COUNT_WNE_INC2_P10=75, COUNT_WNE_INC3_P10=u&apos;32&apos;, COUNT_WNE_INDEP0_INC1_P10=u&apos;PrivacySuppressed&apos;, COUNT_WNE_INDEP0_P10=u&apos;PrivacySuppressed&apos;, COUNT_WNE_INDEP1_P10=u&apos;159&apos;, COUNT_WNE_MALE0_P10=80, COUNT_WNE_MALE1_P10=88, GT_25K_P10=0.696, MN_EARN_WNE_INC1_P10=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INC2_P10=u&apos;46400&apos;, MN_EARN_WNE_INC3_P10=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INDEP0_INC1_P10=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INDEP0_P10=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INDEP1_P10=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_MALE0_P10=37700, MN_EARN_WNE_MALE1_P10=53700, COUNT_NWNE_P6=u&apos;37&apos;, COUNT_WNE_P6=146, MN_EARN_WNE_P6=40000, MD_EARN_WNE_P6=33200, PCT10_EARN_WNE_P6=7300, PCT25_EARN_WNE_P6=18500, PCT75_EARN_WNE_P6=50900, PCT90_EARN_WNE_P6=75400, SD_EARN_WNE_P6=33600, COUNT_WNE_INC1_P6=67, COUNT_WNE_INC2_P6=60, COUNT_WNE_INC3_P6=u&apos;PrivacySuppressed&apos;, COUNT_WNE_INDEP0_INC1_P6=u&apos;PrivacySuppressed&apos;, COUNT_WNE_INDEP0_P6=u&apos;PrivacySuppressed&apos;, COUNT_WNE_INDEP1_P6=u&apos;141&apos;, COUNT_WNE_MALE0_P6=76, COUNT_WNE_MALE1_P6=70, GT_25K_P6=0.658, MN_EARN_WNE_INC1_P6=31300, MN_EARN_WNE_INC2_P6=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INC3_P6=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INDEP0_INC1_P6=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INDEP0_P6=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_INDEP1_P6=u&apos;PrivacySuppressed&apos;, MN_EARN_WNE_MALE0_P6=28100, MN_EARN_WNE_MALE1_P6=53000, COUNT_NWNE_P7=41, COUNT_WNE_P7=172, MN_EARN_WNE_P7=38700, SD_EARN_WNE_P7=27800, GT_25K_P7=0.66279071569442, COUNT_NWNE_P8=u&apos;47&apos;, COUNT_WNE_P8=193, MN_EARN_WNE_P8=39200, MD_EARN_WNE_P8=34800, PCT10_EARN_WNE_P8=5800, PCT25_EARN_WNE_P8=18400, PCT75_EARN_WNE_P8=52200, PCT90_EARN_WNE_P8=78700, SD_EARN_WNE_P8=30500, GT_25K_P8=0.668, COUNT_NWNE_P9=41, COUNT_WNE_P9=174, MN_EARN_WNE_P9=42400, SD_EARN_WNE_P9=30500, GT_25K_P9=0.7356321811676)]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">OSError</span>: [Errno 2] No such file or directory: &apos;/databricks-datasets&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">OSError</span>                                   Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729716&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> <span class=\"ansigreen\">import</span> os<span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 2</span><span class=\"ansiyellow\"> </span><span class=\"ansigreen\">print</span> os<span class=\"ansiyellow\">.</span>listdir<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;/databricks-datasets&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">OSError</span>: [Errno 2] No such file or directory: &apos;/databricks-datasets&apos;</div>","workflows":[],"startTime":1514642082042,"submitTime":1514642082030,"finishTime":1514642082267,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"e668a849-c2cf-410a-89bf-cfe5533f8e0f"},{"version":"CommandV1","origId":843068537729717,"guid":"e8901951-afc3-48c8-8b00-6a172f915eed","subtype":"command","commandType":"auto","position":3.0,"command":"columns = df.columns\nprint columns","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">[&apos;UNITID&apos;, &apos;OPEID&apos;, &apos;OPEID6&apos;, &apos;INSTNM&apos;, &apos;COUNT_ED&apos;, &apos;AGEGE24&apos;, &apos;PCT_WHITE&apos;, &apos;PCT_BLACK&apos;, &apos;PCT_ASIAN&apos;, &apos;PCT_HISPANIC&apos;, &apos;PCT_BA&apos;, &apos;PCT_GRAD_PROF&apos;, &apos;PCT_BORN_US&apos;, &apos;MEDIAN_HH_INC&apos;, &apos;POVERTY_RATE&apos;, &apos;UNEMP_RATE&apos;, &apos;LN_MEDIAN_HH_INC&apos;, &apos;COUNT_NWNE_P10&apos;, &apos;COUNT_WNE_P10&apos;, &apos;MN_EARN_WNE_P10&apos;, &apos;MD_EARN_WNE_P10&apos;, &apos;PCT10_EARN_WNE_P10&apos;, &apos;PCT25_EARN_WNE_P10&apos;, &apos;PCT75_EARN_WNE_P10&apos;, &apos;PCT90_EARN_WNE_P10&apos;, &apos;SD_EARN_WNE_P10&apos;, &apos;COUNT_WNE_INC1_P10&apos;, &apos;COUNT_WNE_INC2_P10&apos;, &apos;COUNT_WNE_INC3_P10&apos;, &apos;COUNT_WNE_INDEP0_INC1_P10&apos;, &apos;COUNT_WNE_INDEP0_P10&apos;, &apos;COUNT_WNE_INDEP1_P10&apos;, &apos;COUNT_WNE_MALE0_P10&apos;, &apos;COUNT_WNE_MALE1_P10&apos;, &apos;GT_25K_P10&apos;, &apos;MN_EARN_WNE_INC1_P10&apos;, &apos;MN_EARN_WNE_INC2_P10&apos;, &apos;MN_EARN_WNE_INC3_P10&apos;, &apos;MN_EARN_WNE_INDEP0_INC1_P10&apos;, &apos;MN_EARN_WNE_INDEP0_P10&apos;, &apos;MN_EARN_WNE_INDEP1_P10&apos;, &apos;MN_EARN_WNE_MALE0_P10&apos;, &apos;MN_EARN_WNE_MALE1_P10&apos;, &apos;COUNT_NWNE_P6&apos;, &apos;COUNT_WNE_P6&apos;, &apos;MN_EARN_WNE_P6&apos;, &apos;MD_EARN_WNE_P6&apos;, &apos;PCT10_EARN_WNE_P6&apos;, &apos;PCT25_EARN_WNE_P6&apos;, &apos;PCT75_EARN_WNE_P6&apos;, &apos;PCT90_EARN_WNE_P6&apos;, &apos;SD_EARN_WNE_P6&apos;, &apos;COUNT_WNE_INC1_P6&apos;, &apos;COUNT_WNE_INC2_P6&apos;, &apos;COUNT_WNE_INC3_P6&apos;, &apos;COUNT_WNE_INDEP0_INC1_P6&apos;, &apos;COUNT_WNE_INDEP0_P6&apos;, &apos;COUNT_WNE_INDEP1_P6&apos;, &apos;COUNT_WNE_MALE0_P6&apos;, &apos;COUNT_WNE_MALE1_P6&apos;, &apos;GT_25K_P6&apos;, &apos;MN_EARN_WNE_INC1_P6&apos;, &apos;MN_EARN_WNE_INC2_P6&apos;, &apos;MN_EARN_WNE_INC3_P6&apos;, &apos;MN_EARN_WNE_INDEP0_INC1_P6&apos;, &apos;MN_EARN_WNE_INDEP0_P6&apos;, &apos;MN_EARN_WNE_INDEP1_P6&apos;, &apos;MN_EARN_WNE_MALE0_P6&apos;, &apos;MN_EARN_WNE_MALE1_P6&apos;, &apos;COUNT_NWNE_P7&apos;, &apos;COUNT_WNE_P7&apos;, &apos;MN_EARN_WNE_P7&apos;, &apos;SD_EARN_WNE_P7&apos;, &apos;GT_25K_P7&apos;, &apos;COUNT_NWNE_P8&apos;, &apos;COUNT_WNE_P8&apos;, &apos;MN_EARN_WNE_P8&apos;, &apos;MD_EARN_WNE_P8&apos;, &apos;PCT10_EARN_WNE_P8&apos;, &apos;PCT25_EARN_WNE_P8&apos;, &apos;PCT75_EARN_WNE_P8&apos;, &apos;PCT90_EARN_WNE_P8&apos;, &apos;SD_EARN_WNE_P8&apos;, &apos;GT_25K_P8&apos;, &apos;COUNT_NWNE_P9&apos;, &apos;COUNT_WNE_P9&apos;, &apos;MN_EARN_WNE_P9&apos;, &apos;SD_EARN_WNE_P9&apos;, &apos;GT_25K_P9&apos;]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"java.io.FileNotFoundException: /databricks-dataset","error":"<div class=\"ansiout\">\tat com.databricks.backend.daemon.data.client.DbfsClient.send0(DbfsClient.scala:92)\n\tat com.databricks.backend.daemon.data.client.DbfsClient.sendIdempotent(DbfsClient.scala:55)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystemV1.listStatus(DatabricksFileSystemV1.scala:180)\n\tat com.databricks.backend.daemon.data.client.DatabricksFileSystem.listStatus(DatabricksFileSystem.scala:139)\n\tat com.databricks.backend.daemon.dbutils.FSUtils$.ls(DBUtilsCore.scala:55)\n\tat com.databricks.dbutils_v1.impl.DbfsUtilsImpl.ls(DbfsUtilsImpl.scala:30)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$$iw$$iw$$iw$$iw$$iw$$iw.&lt;init&gt;(command-843068537729717:1)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$$iw$$iw$$iw$$iw$$iw.&lt;init&gt;(command-843068537729717:44)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$$iw$$iw$$iw$$iw.&lt;init&gt;(command-843068537729717:46)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$$iw$$iw$$iw.&lt;init&gt;(command-843068537729717:48)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$$iw$$iw.&lt;init&gt;(command-843068537729717:50)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$$iw.&lt;init&gt;(command-843068537729717:52)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read.&lt;init&gt;(command-843068537729717:54)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$.&lt;init&gt;(command-843068537729717:58)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$read$.&lt;clinit&gt;(command-843068537729717)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$eval$.$print$lzycompute(&lt;notebook&gt;:7)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$eval$.$print(&lt;notebook&gt;:6)\n\tat line06a7c0fb28194e009206356ce49acbdb31.$eval.$print(&lt;notebook&gt;)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:786)\n\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1047)\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:638)\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:637)\n\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\n\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:637)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:569)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:565)\n\tat com.databricks.backend.daemon.driver.DriverILoop.execute(DriverILoop.scala:186)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply$mcV$sp(ScalaDriverLocal.scala:182)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply(ScalaDriverLocal.scala:182)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply(ScalaDriverLocal.scala:182)\n\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExitInternal$.trapExit(DriverLocal.scala:456)\n\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExit$.apply(DriverLocal.scala:410)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal.repl(ScalaDriverLocal.scala:182)\n\tat com.databricks.backend.daemon.driver.DriverLocal$$anonfun$execute$3.apply(DriverLocal.scala:234)\n\tat com.databricks.backend.daemon.driver.DriverLocal$$anonfun$execute$3.apply(DriverLocal.scala:215)\n\tat com.databricks.logging.UsageLogging$$anonfun$withAttributionContext$1.apply(UsageLogging.scala:188)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\n\tat com.databricks.logging.UsageLogging$class.withAttributionContext(UsageLogging.scala:183)\n\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:39)\n\tat com.databricks.logging.UsageLogging$class.withAttributionTags(UsageLogging.scala:221)\n\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:39)\n\tat com.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:215)\n\tat com.databricks.backend.daemon.driver.DriverWrapper$$anonfun$tryExecutingCommand$2.apply(DriverWrapper.scala:601)\n\tat com.databricks.backend.daemon.driver.DriverWrapper$$anonfun$tryExecutingCommand$2.apply(DriverWrapper.scala:601)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.tryExecutingCommand(DriverWrapper.scala:596)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.getCommandOutputAndError(DriverWrapper.scala:486)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.executeCommand(DriverWrapper.scala:554)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.runInnerLoop(DriverWrapper.scala:391)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.runInner(DriverWrapper.scala:348)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.run(DriverWrapper.scala:215)\n\tat java.lang.Thread.run(Thread.java:748)</div>","workflows":[],"startTime":1514642196588,"submitTime":1514642196575,"finishTime":1514642196668,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"8fdeaee9-1a2c-4b0c-8f07-166762084140"},{"version":"CommandV1","origId":843068537729718,"guid":"aba3ab90-8018-4507-a3c7-37a74d570f79","subtype":"command","commandType":"auto","position":4.0,"command":"pct_white = df.filter(\" PCT_WHITE > .8\").select(['UNITID', 'OPEID', 'OPEID6', 'INSTNM', 'COUNT_ED', 'AGEGE24', 'PCT_WHITE', 'PCT_BLACK', 'PCT_ASIAN', 'PCT_HISPANIC', 'PCT_BA', 'PCT_GRAD_PROF', 'PCT_BORN_US',]).collect()\nfor item in pct_white:\n  print item\n  print \n","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Row(UNITID=100654, OPEID=100200, OPEID6=1002, INSTNM=u&apos;Alabama A &amp; M University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.07999999821186, PCT_WHITE=46.8400001525878, PCT_BLACK=47.9799995422363, PCT_ASIAN=1.48000001907348, PCT_HISPANIC=3.78999996185302, PCT_BA=13.0, PCT_GRAD_PROF=6.8600001335144, PCT_BORN_US=94.7399978637695)\n\nRow(UNITID=100663, OPEID=105200, OPEID6=1052, INSTNM=u&apos;University of Alabama at Birmingham&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.25999999046325, PCT_WHITE=69.0199966430664, PCT_BLACK=27.7600002288818, PCT_ASIAN=1.10000002384185, PCT_HISPANIC=2.02999997138977, PCT_BA=15.9300003051757, PCT_GRAD_PROF=8.55000019073486, PCT_BORN_US=96.5)\n\nRow(UNITID=100690, OPEID=2503400, OPEID6=25034, INSTNM=u&apos;Amridge University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.82999998331069, PCT_WHITE=70.8799972534179, PCT_BLACK=22.5300006866455, PCT_ASIAN=1.28999996185302, PCT_HISPANIC=6.94000005722046, PCT_BA=13.2299995422363, PCT_GRAD_PROF=7.01000022888183, PCT_BORN_US=94.0899963378906)\n\nRow(UNITID=100706, OPEID=105500, OPEID6=1055, INSTNM=u&apos;University of Alabama in Huntsville&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.28999999165534, PCT_WHITE=76.3799972534179, PCT_BLACK=18.9799995422363, PCT_ASIAN=1.41999995708465, PCT_HISPANIC=2.54999995231628, PCT_BA=17.6700000762939, PCT_GRAD_PROF=8.90999984741211, PCT_BORN_US=95.2699966430664)\n\nRow(UNITID=100724, OPEID=100500, OPEID6=1005, INSTNM=u&apos;Alabama State University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.10999999940395, PCT_WHITE=42.6899986267089, PCT_BLACK=52.3199996948242, PCT_ASIAN=1.40999996662139, PCT_HISPANIC=4.09000015258789, PCT_BA=11.8100004196167, PCT_GRAD_PROF=6.76000022888183, PCT_BORN_US=94.5299987792968)\n\nRow(UNITID=100751, OPEID=105100, OPEID6=1051, INSTNM=u&apos;The University of Alabama&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.10000000149011, PCT_WHITE=75.3499984741211, PCT_BLACK=21.0599994659423, PCT_ASIAN=1.20000004768371, PCT_HISPANIC=2.41000008583068, PCT_BA=16.4799995422363, PCT_GRAD_PROF=9.21000003814697, PCT_BORN_US=96.0800018310547)\n\nRow(UNITID=100760, OPEID=100700, OPEID6=1007, INSTNM=u&apos;Central Alabama Community College&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.41999998688697, PCT_WHITE=71.5100021362304, PCT_BLACK=26.8999996185302, PCT_ASIAN=0.2199999988079, PCT_HISPANIC=1.00999999046325, PCT_BA=7.96999979019165, PCT_GRAD_PROF=4.55000019073486, PCT_BORN_US=98.8499984741211)\n\nRow(UNITID=100812, OPEID=100800, OPEID6=1008, INSTNM=u&apos;Athens State University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.61000001430511, PCT_WHITE=83.8899993896484, PCT_BLACK=12.2600002288818, PCT_ASIAN=0.64999997615814, PCT_HISPANIC=2.40000009536743, PCT_BA=11.8900003433227, PCT_GRAD_PROF=6.17000007629394, PCT_BORN_US=96.9599990844726)\n\nRow(UNITID=100830, OPEID=831000, OPEID6=8310, INSTNM=u&apos;Auburn University at Montgomery&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.31999999284744, PCT_WHITE=59.9700012207031, PCT_BLACK=37.2099990844726, PCT_ASIAN=0.91000002622604, PCT_HISPANIC=1.62000000476837, PCT_BA=14.7200002670288, PCT_GRAD_PROF=9.09000015258789, PCT_BORN_US=96.8499984741211)\n\nRow(UNITID=100858, OPEID=100900, OPEID6=1009, INSTNM=u&apos;Auburn University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.07000000029802, PCT_WHITE=75.9000015258789, PCT_BLACK=19.7999992370605, PCT_ASIAN=1.64999997615814, PCT_HISPANIC=2.89000010490417, PCT_BA=17.9300003051757, PCT_GRAD_PROF=10.8199996948242, PCT_BORN_US=94.9199981689453)\n\nRow(UNITID=100937, OPEID=101200, OPEID6=1012, INSTNM=u&apos;Birmingham Southern College&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.01999999955296, PCT_WHITE=78.9000015258789, PCT_BLACK=17.4099998474121, PCT_ASIAN=1.38999998569488, PCT_HISPANIC=2.46000003814697, PCT_BA=20.9099998474121, PCT_GRAD_PROF=11.6700000762939, PCT_BORN_US=95.6900024414062)\n\nRow(UNITID=101028, OPEID=1218200, OPEID6=12182, INSTNM=u&apos;Chattahoochee Valley Community College&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.43000000715255, PCT_WHITE=57.5299987792968, PCT_BLACK=38.6800003051757, PCT_ASIAN=0.85000002384185, PCT_HISPANIC=2.85999989509582, PCT_BA=9.61999988555908, PCT_GRAD_PROF=5.46000003814697, PCT_BORN_US=94.8799972534179)\n\nRow(UNITID=101073, OPEID=1055400, OPEID6=10554, INSTNM=u&apos;Concordia College Alabama&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.18000000715255, PCT_WHITE=39.2099990844726, PCT_BLACK=58.5, PCT_ASIAN=0.56000000238418, PCT_HISPANIC=1.62000000476837, PCT_BA=9.27999973297119, PCT_GRAD_PROF=5.05999994277954, PCT_BORN_US=97.7799987792969)\n\nRow(UNITID=101116, OPEID=1303906, OPEID6=13039, INSTNM=u&apos;South University-Montgomery&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.73000001907348, PCT_WHITE=65.2200012207031, PCT_BLACK=28.5599994659423, PCT_ASIAN=1.74000000953674, PCT_HISPANIC=6.6100001335144, PCT_BA=14.6499996185302, PCT_GRAD_PROF=7.84999990463257, PCT_BORN_US=91.0699996948242)\n\nRow(UNITID=101143, OPEID=101500, OPEID6=1015, INSTNM=u&apos;Enterprise State Community College&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.41999998688697, PCT_WHITE=74.0800018310547, PCT_BLACK=21.0499992370605, PCT_ASIAN=1.20000004768371, PCT_HISPANIC=3.25999999046325, PCT_BA=11.369999885559, PCT_GRAD_PROF=5.80000019073486, PCT_BORN_US=94.8000030517578)\n\nRow(UNITID=101161, OPEID=106000, OPEID6=1060, INSTNM=u&apos;James H Faulkner State Community College&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.33000001311302, PCT_WHITE=76.1699981689453, PCT_BLACK=20.2999992370605, PCT_ASIAN=0.76999998092651, PCT_HISPANIC=1.55999994277954, PCT_BA=12.5900001525878, PCT_GRAD_PROF=6.75, PCT_BORN_US=97.3300018310547)\n\nRow(UNITID=101189, OPEID=100300, OPEID6=1003, INSTNM=u&apos;Faulkner University&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.62000000476837, PCT_WHITE=64.8799972534179, PCT_BLACK=31.8899993896484, PCT_ASIAN=1.04999995231628, PCT_HISPANIC=1.80999994277954, PCT_BA=14.5500001907348, PCT_GRAD_PROF=7.84999990463257, PCT_BORN_US=96.5899963378906)\n\nRow(UNITID=101240, OPEID=101700, OPEID6=1017, INSTNM=u&apos;Gadsden State Community College&apos;, COUNT_ED=u&apos;NULL&apos;, AGEGE24=0.43999999761581, PCT_WHITE=80.3899993896484, PCT_BLACK=16.829999923706, PCT_ASIAN=0.44999998807907, PCT_HISPANIC=2.17000007629394, PCT_BA=7.92999982833862, PCT_GRAD_PROF=5.19999980926513, PCT_BORN_US=97.4700012207031)\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AnalysisException</span>: u&quot;cannot resolve &apos;&#96;PCT_WHITW&#96;&apos; given input columns: [COUNT_WNE_INDEP0_INC1_P10, COUNT_WNE_P6, COUNT_WNE_P8, OPEID, MN_EARN_WNE_MALE1_P10, COUNT_WNE_INDEP0_P6, AGEGE24, COUNT_WNE_P10, SD_EARN_WNE_P9, MN_EARN_WNE_INC3_P10, PCT90_EARN_WNE_P8, COUNT_WNE_MALE0_P10, MN_EARN_WNE_INC1_P6, MN_EARN_WNE_P7, SD_EARN_WNE_P8, MN_EARN_WNE_INC3_P6, PCT90_EARN_WNE_P6, MEDIAN_HH_INC, PCT10_EARN_WNE_P10, COUNT_WNE_P9, POVERTY_RATE, MN_EARN_WNE_INDEP0_P6, PCT75_EARN_WNE_P8, LN_MEDIAN_HH_INC, PCT10_EARN_WNE_P6, MN_EARN_WNE_P6, MN_EARN_WNE_INC2_P10, PCT75_EARN_WNE_P6, PCT_WHITE, COUNT_WNE_INC3_P10, COUNT_WNE_INC1_P6, MN_EARN_WNE_INDEP0_INC1_P6, SD_EARN_WNE_P10, COUNT_WNE_INDEP0_INC1_P6, PCT75_EARN_WNE_P10, MN_EARN_WNE_MALE1_P6, PCT_BA, GT_25K_P7, COUNT_WNE_MALE1_P6, MN_EARN_WNE_INC1_P10, GT_25K_P8, PCT_GRAD_PROF, COUNT_WNE_INDEP0_P10, MN_EARN_WNE_P10, COUNT_NWNE_P9, PCT_ASIAN, MN_EARN_WNE_MALE0_P10, MN_EARN_WNE_INDEP1_P10, COUNT_WNE_P7, COUNT_WNE_MALE0_P6, PCT10_EARN_WNE_P8, GT_25K_P9, GT_25K_P6, PCT25_EARN_WNE_P6, MD_EARN_WNE_P10, OPEID6, PCT25_EARN_WNE_P10, PCT90_EARN_WNE_P10, COUNT_NWNE_P7, COUNT_NWNE_P8, MN_EARN_WNE_INC2_P6, COUNT_NWNE_P10, SD_EARN_WNE_P6, MN_EARN_WNE_INDEP1_P6, MD_EARN_WNE_P6, MN_EARN_WNE_MALE0_P6, SD_EARN_WNE_P7, MN_EARN_WNE_P8, COUNT_WNE_MALE1_P10, PCT25_EARN_WNE_P8, MD_EARN_WNE_P8, INSTNM, MN_EARN_WNE_P9, MN_EARN_WNE_INDEP0_P10, MN_EARN_WNE_INDEP0_INC1_P10, COUNT_WNE_INC2_P6, COUNT_WNE_INC1_P10, COUNT_ED, COUNT_WNE_INDEP1_P10, PCT_HISPANIC, UNITID, COUNT_NWNE_P6, COUNT_WNE_INC2_P10, UNEMP_RATE, GT_25K_P10, COUNT_WNE_INC3_P6, COUNT_WNE_INDEP1_P6, PCT_BLACK, PCT_BORN_US]; line 1 pos 0;\\n&apos;Filter (&apos;PCT_WHITW &gt; 0.9)\\n+- Relation[UNITID#4449,OPEID#4450,OPEID6#4451,INSTNM#4452,COUNT_ED#4453,AGEGE24#4454,PCT_WHITE#4455,PCT_BLACK#4456,PCT_ASIAN#4457,PCT_HISPANIC#4458,PCT_BA#4459,PCT_GRAD_PROF#4460,PCT_BORN_US#4461,MEDIAN_HH_INC#4462,POVERTY_RATE#4463,UNEMP_RATE#4464,LN_MEDIAN_HH_INC#4465,COUNT_NWNE_P10#4466,COUNT_WNE_P10#4467,MN_EARN_WNE_P10#4468,MD_EARN_WNE_P10#4469,PCT10_EARN_WNE_P10#4470,PCT25_EARN_WNE_P10#4471,PCT75_EARN_WNE_P10#4472,... 65 more fields] csv\\n&quot;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729718&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>filter<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&quot;PCT_WHITW &gt; 0.9&quot;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.pyc</span> in <span class=\"ansicyan\">filter</span><span class=\"ansiblue\">(self, condition)</span>\n<span class=\"ansigreen\">   1099</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">   1100</span>         <span class=\"ansigreen\">if</span> isinstance<span class=\"ansiyellow\">(</span>condition<span class=\"ansiyellow\">,</span> basestring<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">-&gt; 1101</span><span class=\"ansiyellow\">             </span>jdf <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>filter<span class=\"ansiyellow\">(</span>condition<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1102</span>         <span class=\"ansigreen\">elif</span> isinstance<span class=\"ansiyellow\">(</span>condition<span class=\"ansiyellow\">,</span> Column<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1103</span>             jdf <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>filter<span class=\"ansiyellow\">(</span>condition<span class=\"ansiyellow\">.</span>_jc<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.pyc</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     67</span>                                              e.java_exception.getStackTrace()))\n<span class=\"ansigreen\">     68</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.AnalysisException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 69</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     70</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.analysis&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AnalysisException</span>: u&quot;cannot resolve &apos;&#96;PCT_WHITW&#96;&apos; given input columns: [COUNT_WNE_INDEP0_INC1_P10, COUNT_WNE_P6, COUNT_WNE_P8, OPEID, MN_EARN_WNE_MALE1_P10, COUNT_WNE_INDEP0_P6, AGEGE24, COUNT_WNE_P10, SD_EARN_WNE_P9, MN_EARN_WNE_INC3_P10, PCT90_EARN_WNE_P8, COUNT_WNE_MALE0_P10, MN_EARN_WNE_INC1_P6, MN_EARN_WNE_P7, SD_EARN_WNE_P8, MN_EARN_WNE_INC3_P6, PCT90_EARN_WNE_P6, MEDIAN_HH_INC, PCT10_EARN_WNE_P10, COUNT_WNE_P9, POVERTY_RATE, MN_EARN_WNE_INDEP0_P6, PCT75_EARN_WNE_P8, LN_MEDIAN_HH_INC, PCT10_EARN_WNE_P6, MN_EARN_WNE_P6, MN_EARN_WNE_INC2_P10, PCT75_EARN_WNE_P6, PCT_WHITE, COUNT_WNE_INC3_P10, COUNT_WNE_INC1_P6, MN_EARN_WNE_INDEP0_INC1_P6, SD_EARN_WNE_P10, COUNT_WNE_INDEP0_INC1_P6, PCT75_EARN_WNE_P10, MN_EARN_WNE_MALE1_P6, PCT_BA, GT_25K_P7, COUNT_WNE_MALE1_P6, MN_EARN_WNE_INC1_P10, GT_25K_P8, PCT_GRAD_PROF, COUNT_WNE_INDEP0_P10, MN_EARN_WNE_P10, COUNT_NWNE_P9, PCT_ASIAN, MN_EARN_WNE_MALE0_P10, MN_EARN_WNE_INDEP1_P10, COUNT_WNE_P7, COUNT_WNE_MALE0_P6, PCT10_EARN_WNE_P8, GT_25K_P9, GT_25K_P6, PCT25_EARN_WNE_P6, MD_EARN_WNE_P10, OPEID6, PCT25_EARN_WNE_P10, PCT90_EARN_WNE_P10, COUNT_NWNE_P7, COUNT_NWNE_P8, MN_EARN_WNE_INC2_P6, COUNT_NWNE_P10, SD_EARN_WNE_P6, MN_EARN_WNE_INDEP1_P6, MD_EARN_WNE_P6, MN_EARN_WNE_MALE0_P6, SD_EARN_WNE_P7, MN_EARN_WNE_P8, COUNT_WNE_MALE1_P10, PCT25_EARN_WNE_P8, MD_EARN_WNE_P8, INSTNM, MN_EARN_WNE_P9, MN_EARN_WNE_INDEP0_P10, MN_EARN_WNE_INDEP0_INC1_P10, COUNT_WNE_INC2_P6, COUNT_WNE_INC1_P10, COUNT_ED, COUNT_WNE_INDEP1_P10, PCT_HISPANIC, UNITID, COUNT_NWNE_P6, COUNT_WNE_INC2_P10, UNEMP_RATE, GT_25K_P10, COUNT_WNE_INC3_P6, COUNT_WNE_INDEP1_P6, PCT_BLACK, PCT_BORN_US]; line 1 pos 0;\\n&apos;Filter (&apos;PCT_WHITW &gt; 0.9)\\n+- Relation[UNITID#4449,OPEID#4450,OPEID6#4451,INSTNM#4452,COUNT_ED#4453,AGEGE24#4454,PCT_WHITE#4455,PCT_BLACK#4456,PCT_ASIAN#4457,PCT_HISPANIC#4458,PCT_BA#4459,PCT_GRAD_PROF#4460,PCT_BORN_US#4461,MEDIAN_HH_INC#4462,POVERTY_RATE#4463,UNEMP_RATE#4464,LN_MEDIAN_HH_INC#4465,COUNT_NWNE_P10#4466,COUNT_WNE_P10#4467,MN_EARN_WNE_P10#4468,MD_EARN_WNE_P10#4469,PCT10_EARN_WNE_P10#4470,PCT25_EARN_WNE_P10#4471,PCT75_EARN_WNE_P10#4472,... 65 more fields] csv\\n&quot;</div>","workflows":[],"startTime":1514642677514,"submitTime":1514642677502,"finishTime":1514642677787,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"fe875881-4e09-4194-93d0-cd3e449286b3"},{"version":"CommandV1","origId":843068537729719,"guid":"d328f801-8b43-47c8-8ecd-f37628d5e032","subtype":"command","commandType":"auto","position":5.0,"command":"columns_ = ['UNITID', 'INSTNM',  'AGEGE24', 'PCT_WHITE', 'PCT_BLACK', 'PCT_ASIAN', 'PCT_HISPANIC', 'PCT_BA', 'PCT_GRAD_PROF', 'PCT_BORN_US']\ndf.filter(\" PCT_WHITE > 30 \").select(columns_).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|100654|Alabama A &amp; M Uni...|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348|3.78999996185302|            13.0| 6.8600001335144|94.7399978637695|\n|100663|University of Ala...|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185|2.02999997138977|15.9300003051757|8.55000019073486|            96.5|\n|100690|  Amridge University|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302|6.94000005722046|13.2299995422363|7.01000022888183|94.0899963378906|\n|100706|University of Ala...|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465|2.54999995231628|17.6700000762939|8.90999984741211|95.2699966430664|\n|100724|Alabama State Uni...|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139|4.09000015258789|11.8100004196167|6.76000022888183|94.5299987792968|\n|100751|The University of...|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371|2.41000008583068|16.4799995422363|9.21000003814697|96.0800018310547|\n|100760|Central Alabama C...|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|7.96999979019165|4.55000019073486|98.8499984741211|\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n|100830|Auburn University...|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|14.7200002670288|9.09000015258789|96.8499984741211|\n|100858|   Auburn University|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814|2.89000010490417|17.9300003051757|10.8199996948242|94.9199981689453|\n|100937|Birmingham Southe...|0.01999999955296|78.9000015258789|17.4099998474121|1.38999998569488|2.46000003814697|20.9099998474121|11.6700000762939|95.6900024414062|\n|101028|Chattahoochee Val...|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185|2.85999989509582|9.61999988555908|5.46000003814697|94.8799972534179|\n|101073|Concordia College...|0.18000000715255|39.2099990844726|            58.5|0.56000000238418|1.62000000476837|9.27999973297119|5.05999994277954|97.7799987792969|\n|101116|South University-...|0.73000001907348|65.2200012207031|28.5599994659423|1.74000000953674| 6.6100001335144|14.6499996185302|7.84999990463257|91.0699996948242|\n|101143|Enterprise State ...|0.41999998688697|74.0800018310547|21.0499992370605|1.20000004768371|3.25999999046325| 11.369999885559|5.80000019073486|94.8000030517578|\n|101161|James H Faulkner ...|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651|1.55999994277954|12.5900001525878|            6.75|97.3300018310547|\n|101189| Faulkner University|0.62000000476837|64.8799972534179|31.8899993896484|1.04999995231628|1.80999994277954|14.5500001907348|7.84999990463257|96.5899963378906|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514643553670,"submitTime":1514643553653,"finishTime":1514643554235,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"70ca0561-840a-4206-a42c-9d75dbce1e06"},{"version":"CommandV1","origId":843068537729720,"guid":"826cc513-c665-4f9a-871a-9c7ce8d5d040","subtype":"command","commandType":"auto","position":6.0,"command":"columns_ = ['UNITID', 'INSTNM',  'AGEGE24', 'PCT_WHITE', 'PCT_BLACK', 'PCT_ASIAN', 'PCT_HISPANIC', 'PCT_BA', 'PCT_GRAD_PROF', 'PCT_BORN_US']\ndf.filter( (df['PCT_WHITE'] > 30) & (df['PCT_ASIAN'] < 1) & (df['PCT_BLACK'] > 10) ).select(columns_).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|100760|Central Alabama C...|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|7.96999979019165|4.55000019073486|98.8499984741211|\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n|100830|Auburn University...|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|14.7200002670288|9.09000015258789|96.8499984741211|\n|101028|Chattahoochee Val...|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185|2.85999989509582|9.61999988555908|5.46000003814697|94.8799972534179|\n|101073|Concordia College...|0.18000000715255|39.2099990844726|            58.5|0.56000000238418|1.62000000476837|9.27999973297119|5.05999994277954|97.7799987792969|\n|101161|James H Faulkner ...|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651|1.55999994277954|12.5900001525878|            6.75|97.3300018310547|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-843068537729720&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">2</span>\n<span class=\"ansiyellow\">    pct_white = df.filter( (df[&apos;PCT_WHITE&apos;] &gt; 30) &amp; (df[&apos;PCT_ASIAN&apos;] &lt; 1) &amp; &amp; (df[&apos;PCT_BLACK&apos;] &gt; 10) ).select(columns_).show()</span>\n<span class=\"ansigrey\">                                                                            ^</span>\n<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax\n</div>","workflows":[],"startTime":1514643558899,"submitTime":1514643558878,"finishTime":1514643559437,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"6fa45f2d-77cd-45f7-8db5-e121813eb536"},{"version":"CommandV1","origId":843068537729721,"guid":"eacf37a8-1b04-45ae-a34f-6cbd79e4e66e","subtype":"command","commandType":"auto","position":7.0,"command":"columns_ = ['UNITID', 'INSTNM',  'AGEGE24', 'PCT_WHITE', 'PCT_BLACK', 'PCT_ASIAN', 'PCT_HISPANIC', 'PCT_BA', 'PCT_GRAD_PROF', 'PCT_BORN_US']\ndf.filter( (df['PCT_WHITE'] > 80) & (df['PCT_ASIAN'] < 1) & ~(df['PCT_BORN_US'] < 90) ).select(columns_).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514643582212,"submitTime":1514643582198,"finishTime":1514643582487,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4bb59ea9-7060-4a57-ba89-51c69adf4501"},{"version":"CommandV1","origId":843068537729722,"guid":"09f4b05f-5c3d-4fe6-a750-063c95f3f679","subtype":"command","commandType":"auto","position":8.0,"command":"result = df.filter( (df['PCT_WHITE'] > 80) & (df['PCT_ASIAN'] < 1) & ~(df['PCT_BORN_US'] < 90) ).select(columns_).collect()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514643794451,"submitTime":1514643794438,"finishTime":1514643794674,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c7978fd2-d44c-41d1-b11a-7594606410bc"},{"version":"CommandV1","origId":843068537729723,"guid":"aadd73e9-40b9-4ca4-aa31-c768cb94834b","subtype":"command","commandType":"auto","position":9.0,"command":"row = result[0]\nrow.asDict()['INSTNM']","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">92</span><span class=\"ansired\">]: </span>u&apos;Athens State University&apos;\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">ParseException</span>: u&apos;\\nDataType dict is not supported.(line 1, pos 0)\\n\\n== SQL ==\\nDict\\n^^^\\n&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">ParseException</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729723&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> row <span class=\"ansiyellow\">=</span> result<span class=\"ansiyellow\">[</span><span class=\"ansicyan\">0</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 2</span><span class=\"ansiyellow\"> </span>row<span class=\"ansiyellow\">.</span>astype<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&quot;Dict&quot;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/column.pyc</span> in <span class=\"ansicyan\">cast</span><span class=\"ansiblue\">(self, dataType)</span>\n<span class=\"ansigreen\">    413</span>         &quot;&quot;&quot;\n<span class=\"ansigreen\">    414</span>         <span class=\"ansigreen\">if</span> isinstance<span class=\"ansiyellow\">(</span>dataType<span class=\"ansiyellow\">,</span> basestring<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">--&gt; 415</span><span class=\"ansiyellow\">             </span>jc <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jc<span class=\"ansiyellow\">.</span>cast<span class=\"ansiyellow\">(</span>dataType<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    416</span>         <span class=\"ansigreen\">elif</span> isinstance<span class=\"ansiyellow\">(</span>dataType<span class=\"ansiyellow\">,</span> DataType<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">    417</span>             <span class=\"ansigreen\">from</span> pyspark<span class=\"ansiyellow\">.</span>sql <span class=\"ansigreen\">import</span> SparkSession<span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.pyc</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     72</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.parser.ParseException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 73</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> ParseException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     74</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.streaming.StreamingQueryException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     75</span>                 <span class=\"ansigreen\">raise</span> StreamingQueryException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">ParseException</span>: u&apos;\\nDataType dict is not supported.(line 1, pos 0)\\n\\n== SQL ==\\nDict\\n^^^\\n&apos;</div>","workflows":[],"startTime":1514643829229,"submitTime":1514643829221,"finishTime":1514643829269,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"08583b62-9a5d-460f-a1fe-dd18b08ebb5a"},{"version":"CommandV1","origId":843068537729724,"guid":"ddc5a6ff-b8b3-4f86-8a3f-7a0f08206c91","subtype":"command","commandType":"auto","position":10.0,"command":"columns_","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"><span class=\"ansired\">Out[</span><span class=\"ansired\">93</span><span class=\"ansired\">]: </span>\n[&apos;UNITID&apos;,\n &apos;INSTNM&apos;,\n &apos;AGEGE24&apos;,\n &apos;PCT_WHITE&apos;,\n &apos;PCT_BLACK&apos;,\n &apos;PCT_ASIAN&apos;,\n &apos;PCT_HISPANIC&apos;,\n &apos;PCT_BA&apos;,\n &apos;PCT_GRAD_PROF&apos;,\n &apos;PCT_BORN_US&apos;]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514644934434,"submitTime":1514644934421,"finishTime":1514644934484,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7df93de6-bb46-4ad9-9d53-f88acd1a9e99"},{"version":"CommandV1","origId":843068537729725,"guid":"1745adec-a9b1-4887-8b14-9038f9bb3c0a","subtype":"command","commandType":"auto","position":11.0,"command":"df[columns_].groupBy('INSTNM').mean().show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+--------------------+-----------+----------------+----------------+----------------+----------------+-----------------+----------------+------------------+----------------+\n|              INSTNM|avg(UNITID)|    avg(AGEGE24)|  avg(PCT_WHITE)|  avg(PCT_BLACK)|  avg(PCT_ASIAN)|avg(PCT_HISPANIC)|     avg(PCT_BA)|avg(PCT_GRAD_PROF)|avg(PCT_BORN_US)|\n+--------------------+-----------+----------------+----------------+----------------+----------------+-----------------+----------------+------------------+----------------+\n|Birmingham Southe...|   100937.0|0.01999999955296|78.9000015258789|17.4099998474121|1.38999998569488| 2.46000003814697|20.9099998474121|  11.6700000762939|95.6900024414062|\n|Alabama A &amp; M Uni...|   100654.0|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348| 3.78999996185302|            13.0|   6.8600001335144|94.7399978637695|\n|Chattahoochee Val...|   101028.0|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185| 2.85999989509582|9.61999988555908|  5.46000003814697|94.8799972534179|\n|The University of...|   100751.0|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371| 2.41000008583068|16.4799995422363|  9.21000003814697|96.0800018310547|\n|Athens State Univ...|   100812.0|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814| 2.40000009536743|11.8900003433227|  6.17000007629394|96.9599990844726|\n| Faulkner University|   101189.0|0.62000000476837|64.8799972534179|31.8899993896484|1.04999995231628| 1.80999994277954|14.5500001907348|  7.84999990463257|96.5899963378906|\n|University of Ala...|   100706.0|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465| 2.54999995231628|17.6700000762939|  8.90999984741211|95.2699966430664|\n|Alabama State Uni...|   100724.0|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139| 4.09000015258789|11.8100004196167|  6.76000022888183|94.5299987792968|\n|James H Faulkner ...|   101161.0|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651| 1.55999994277954|12.5900001525878|              6.75|97.3300018310547|\n|Enterprise State ...|   101143.0|0.41999998688697|74.0800018310547|21.0499992370605|1.20000004768371| 3.25999999046325| 11.369999885559|  5.80000019073486|94.8000030517578|\n|   Auburn University|   100858.0|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814| 2.89000010490417|17.9300003051757|  10.8199996948242|94.9199981689453|\n|South University-...|   101116.0|0.73000001907348|65.2200012207031|28.5599994659423|1.74000000953674|  6.6100001335144|14.6499996185302|  7.84999990463257|91.0699996948242|\n|  Amridge University|   100690.0|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302| 6.94000005722046|13.2299995422363|  7.01000022888183|94.0899963378906|\n|Auburn University...|   100830.0|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604| 1.62000000476837|14.7200002670288|  9.09000015258789|96.8499984741211|\n|University of Ala...|   100663.0|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185| 2.02999997138977|15.9300003051757|  8.55000019073486|            96.5|\n|Concordia College...|   101073.0|0.18000000715255|39.2099990844726|            58.5|0.56000000238418| 1.62000000476837|9.27999973297119|  5.05999994277954|97.7799987792969|\n|Gadsden State Com...|   101240.0|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907| 2.17000007629394|7.92999982833862|  5.19999980926513|97.4700012207031|\n|Central Alabama C...|   100760.0|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079| 1.00999999046325|7.96999979019165|  4.55000019073486|98.8499984741211|\n+--------------------+-----------+----------------+----------------+----------------+----------------+-----------------+----------------+------------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: &apos;GroupedData&apos; object has no attribute &apos;std&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729725&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">[</span>columns_<span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">.</span>groupBy<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;INSTNM&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>std<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: &apos;GroupedData&apos; object has no attribute &apos;std&apos;</div>","workflows":[],"startTime":1514645173907,"submitTime":1514645173899,"finishTime":1514645174782,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"58f9b9c1-adaf-4155-9e16-5bd213ebd49e"},{"version":"CommandV1","origId":843068537729726,"guid":"9f775a10-ed0b-42be-9654-750632a4ab62","subtype":"command","commandType":"auto","position":12.0,"command":"df.agg({'PCT_WHITE':'mean','PCT_BLACK':'mean', 'PCT_BORN_US':'max'}).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+----------------+-----------------+-----------------+\n|max(PCT_BORN_US)|   avg(PCT_WHITE)|   avg(PCT_BLACK)|\n+----------------+-----------------+-----------------+\n|98.8499984741211|67.15611055162213|28.88999970753984|\n+----------------+-----------------+-----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514645340815,"submitTime":1514645340808,"finishTime":1514645341141,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c53b2c9b-929e-4256-9da0-259072177390"},{"version":"CommandV1","origId":843068537729727,"guid":"dceeb882-0f31-4041-abcd-4c3c122b80dc","subtype":"command","commandType":"auto","position":13.0,"command":"group = df.groupBy('INSTNM')\ngroup.agg({'PCT_WHITE':'mean','PCT_BORN_US':'mean','PCT_BLACK':'mean'}).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+--------------------+----------------+----------------+----------------+\n|              INSTNM|avg(PCT_BORN_US)|  avg(PCT_WHITE)|  avg(PCT_BLACK)|\n+--------------------+----------------+----------------+----------------+\n|Birmingham Southe...|95.6900024414062|78.9000015258789|17.4099998474121|\n|Alabama A &amp; M Uni...|94.7399978637695|46.8400001525878|47.9799995422363|\n|Chattahoochee Val...|94.8799972534179|57.5299987792968|38.6800003051757|\n|The University of...|96.0800018310547|75.3499984741211|21.0599994659423|\n|Athens State Univ...|96.9599990844726|83.8899993896484|12.2600002288818|\n| Faulkner University|96.5899963378906|64.8799972534179|31.8899993896484|\n|University of Ala...|95.2699966430664|76.3799972534179|18.9799995422363|\n|Alabama State Uni...|94.5299987792968|42.6899986267089|52.3199996948242|\n|James H Faulkner ...|97.3300018310547|76.1699981689453|20.2999992370605|\n|Enterprise State ...|94.8000030517578|74.0800018310547|21.0499992370605|\n|   Auburn University|94.9199981689453|75.9000015258789|19.7999992370605|\n|South University-...|91.0699996948242|65.2200012207031|28.5599994659423|\n|  Amridge University|94.0899963378906|70.8799972534179|22.5300006866455|\n|Auburn University...|96.8499984741211|59.9700012207031|37.2099990844726|\n|University of Ala...|            96.5|69.0199966430664|27.7600002288818|\n|Concordia College...|97.7799987792969|39.2099990844726|            58.5|\n|Gadsden State Com...|97.4700012207031|80.3899993896484| 16.829999923706|\n|Central Alabama C...|98.8499984741211|71.5100021362304|26.8999996185302|\n+--------------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AnalysisException</span>: u&apos;Cannot resolve column name &quot;PCT_BORNUS&quot; among (UNITID, OPEID, OPEID6, INSTNM, COUNT_ED, AGEGE24, PCT_WHITE, PCT_BLACK, PCT_ASIAN, PCT_HISPANIC, PCT_BA, PCT_GRAD_PROF, PCT_BORN_US, MEDIAN_HH_INC, POVERTY_RATE, UNEMP_RATE, LN_MEDIAN_HH_INC, COUNT_NWNE_P10, COUNT_WNE_P10, MN_EARN_WNE_P10, MD_EARN_WNE_P10, PCT10_EARN_WNE_P10, PCT25_EARN_WNE_P10, PCT75_EARN_WNE_P10, PCT90_EARN_WNE_P10, SD_EARN_WNE_P10, COUNT_WNE_INC1_P10, COUNT_WNE_INC2_P10, COUNT_WNE_INC3_P10, COUNT_WNE_INDEP0_INC1_P10, COUNT_WNE_INDEP0_P10, COUNT_WNE_INDEP1_P10, COUNT_WNE_MALE0_P10, COUNT_WNE_MALE1_P10, GT_25K_P10, MN_EARN_WNE_INC1_P10, MN_EARN_WNE_INC2_P10, MN_EARN_WNE_INC3_P10, MN_EARN_WNE_INDEP0_INC1_P10, MN_EARN_WNE_INDEP0_P10, MN_EARN_WNE_INDEP1_P10, MN_EARN_WNE_MALE0_P10, MN_EARN_WNE_MALE1_P10, COUNT_NWNE_P6, COUNT_WNE_P6, MN_EARN_WNE_P6, MD_EARN_WNE_P6, PCT10_EARN_WNE_P6, PCT25_EARN_WNE_P6, PCT75_EARN_WNE_P6, PCT90_EARN_WNE_P6, SD_EARN_WNE_P6, COUNT_WNE_INC1_P6, COUNT_WNE_INC2_P6, COUNT_WNE_INC3_P6, COUNT_WNE_INDEP0_INC1_P6, COUNT_WNE_INDEP0_P6, COUNT_WNE_INDEP1_P6, COUNT_WNE_MALE0_P6, COUNT_WNE_MALE1_P6, GT_25K_P6, MN_EARN_WNE_INC1_P6, MN_EARN_WNE_INC2_P6, MN_EARN_WNE_INC3_P6, MN_EARN_WNE_INDEP0_INC1_P6, MN_EARN_WNE_INDEP0_P6, MN_EARN_WNE_INDEP1_P6, MN_EARN_WNE_MALE0_P6, MN_EARN_WNE_MALE1_P6, COUNT_NWNE_P7, COUNT_WNE_P7, MN_EARN_WNE_P7, SD_EARN_WNE_P7, GT_25K_P7, COUNT_NWNE_P8, COUNT_WNE_P8, MN_EARN_WNE_P8, MD_EARN_WNE_P8, PCT10_EARN_WNE_P8, PCT25_EARN_WNE_P8, PCT75_EARN_WNE_P8, PCT90_EARN_WNE_P8, SD_EARN_WNE_P8, GT_25K_P8, COUNT_NWNE_P9, COUNT_WNE_P9, MN_EARN_WNE_P9, SD_EARN_WNE_P9, GT_25K_P9);&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AnalysisException</span>                         Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729727&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> group <span class=\"ansiyellow\">=</span> df<span class=\"ansiyellow\">.</span>groupBy<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;INSTNM&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 2</span><span class=\"ansiyellow\"> </span>group<span class=\"ansiyellow\">.</span>agg<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">{</span><span class=\"ansiblue\">&apos;PCT_WHITE&apos;</span><span class=\"ansiyellow\">:</span><span class=\"ansiblue\">&apos;mean&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;PCT_BORNUS&apos;</span><span class=\"ansiyellow\">:</span><span class=\"ansiblue\">&apos;mean&apos;</span><span class=\"ansiyellow\">,</span><span class=\"ansiblue\">&apos;PCT_BLACK&apos;</span><span class=\"ansiyellow\">:</span><span class=\"ansiblue\">&apos;mean&apos;</span><span class=\"ansiyellow\">}</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/group.pyc</span> in <span class=\"ansicyan\">agg</span><span class=\"ansiblue\">(self, *exprs)</span>\n<span class=\"ansigreen\">     86</span>         <span class=\"ansigreen\">assert</span> exprs<span class=\"ansiyellow\">,</span> <span class=\"ansiblue\">&quot;exprs should not be empty&quot;</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     87</span>         <span class=\"ansigreen\">if</span> len<span class=\"ansiyellow\">(</span>exprs<span class=\"ansiyellow\">)</span> <span class=\"ansiyellow\">==</span> <span class=\"ansicyan\">1</span> <span class=\"ansigreen\">and</span> isinstance<span class=\"ansiyellow\">(</span>exprs<span class=\"ansiyellow\">[</span><span class=\"ansicyan\">0</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> dict<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 88</span><span class=\"ansiyellow\">             </span>jdf <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jgd<span class=\"ansiyellow\">.</span>agg<span class=\"ansiyellow\">(</span>exprs<span class=\"ansiyellow\">[</span><span class=\"ansicyan\">0</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     89</span>         <span class=\"ansigreen\">else</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     90</span>             <span class=\"ansired\"># Columns</span><span class=\"ansiyellow\"></span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py</span> in <span class=\"ansicyan\">__call__</span><span class=\"ansiblue\">(self, *args)</span>\n<span class=\"ansigreen\">   1131</span>         answer <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>gateway_client<span class=\"ansiyellow\">.</span>send_command<span class=\"ansiyellow\">(</span>command<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1132</span>         return_value = get_return_value(\n<span class=\"ansigreen\">-&gt; 1133</span><span class=\"ansiyellow\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansigreen\">   1134</span> <span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1135</span>         <span class=\"ansigreen\">for</span> temp_arg <span class=\"ansigreen\">in</span> temp_args<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/utils.pyc</span> in <span class=\"ansicyan\">deco</span><span class=\"ansiblue\">(*a, **kw)</span>\n<span class=\"ansigreen\">     67</span>                                              e.java_exception.getStackTrace()))\n<span class=\"ansigreen\">     68</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.AnalysisException: &apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">---&gt; 69</span><span class=\"ansiyellow\">                 </span><span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     70</span>             <span class=\"ansigreen\">if</span> s<span class=\"ansiyellow\">.</span>startswith<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;org.apache.spark.sql.catalyst.analysis&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">     71</span>                 <span class=\"ansigreen\">raise</span> AnalysisException<span class=\"ansiyellow\">(</span>s<span class=\"ansiyellow\">.</span>split<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;: &apos;</span><span class=\"ansiyellow\">,</span> <span class=\"ansicyan\">1</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">[</span><span class=\"ansicyan\">1</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">,</span> stackTrace<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AnalysisException</span>: u&apos;Cannot resolve column name &quot;PCT_BORNUS&quot; among (UNITID, OPEID, OPEID6, INSTNM, COUNT_ED, AGEGE24, PCT_WHITE, PCT_BLACK, PCT_ASIAN, PCT_HISPANIC, PCT_BA, PCT_GRAD_PROF, PCT_BORN_US, MEDIAN_HH_INC, POVERTY_RATE, UNEMP_RATE, LN_MEDIAN_HH_INC, COUNT_NWNE_P10, COUNT_WNE_P10, MN_EARN_WNE_P10, MD_EARN_WNE_P10, PCT10_EARN_WNE_P10, PCT25_EARN_WNE_P10, PCT75_EARN_WNE_P10, PCT90_EARN_WNE_P10, SD_EARN_WNE_P10, COUNT_WNE_INC1_P10, COUNT_WNE_INC2_P10, COUNT_WNE_INC3_P10, COUNT_WNE_INDEP0_INC1_P10, COUNT_WNE_INDEP0_P10, COUNT_WNE_INDEP1_P10, COUNT_WNE_MALE0_P10, COUNT_WNE_MALE1_P10, GT_25K_P10, MN_EARN_WNE_INC1_P10, MN_EARN_WNE_INC2_P10, MN_EARN_WNE_INC3_P10, MN_EARN_WNE_INDEP0_INC1_P10, MN_EARN_WNE_INDEP0_P10, MN_EARN_WNE_INDEP1_P10, MN_EARN_WNE_MALE0_P10, MN_EARN_WNE_MALE1_P10, COUNT_NWNE_P6, COUNT_WNE_P6, MN_EARN_WNE_P6, MD_EARN_WNE_P6, PCT10_EARN_WNE_P6, PCT25_EARN_WNE_P6, PCT75_EARN_WNE_P6, PCT90_EARN_WNE_P6, SD_EARN_WNE_P6, COUNT_WNE_INC1_P6, COUNT_WNE_INC2_P6, COUNT_WNE_INC3_P6, COUNT_WNE_INDEP0_INC1_P6, COUNT_WNE_INDEP0_P6, COUNT_WNE_INDEP1_P6, COUNT_WNE_MALE0_P6, COUNT_WNE_MALE1_P6, GT_25K_P6, MN_EARN_WNE_INC1_P6, MN_EARN_WNE_INC2_P6, MN_EARN_WNE_INC3_P6, MN_EARN_WNE_INDEP0_INC1_P6, MN_EARN_WNE_INDEP0_P6, MN_EARN_WNE_INDEP1_P6, MN_EARN_WNE_MALE0_P6, MN_EARN_WNE_MALE1_P6, COUNT_NWNE_P7, COUNT_WNE_P7, MN_EARN_WNE_P7, SD_EARN_WNE_P7, GT_25K_P7, COUNT_NWNE_P8, COUNT_WNE_P8, MN_EARN_WNE_P8, MD_EARN_WNE_P8, PCT10_EARN_WNE_P8, PCT25_EARN_WNE_P8, PCT75_EARN_WNE_P8, PCT90_EARN_WNE_P8, SD_EARN_WNE_P8, GT_25K_P8, COUNT_NWNE_P9, COUNT_WNE_P9, MN_EARN_WNE_P9, SD_EARN_WNE_P9, GT_25K_P9);&apos;</div>","workflows":[],"startTime":1514645510169,"submitTime":1514645510159,"finishTime":1514645510894,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"630bc54a-8fd9-4c19-81cb-f5137c746589"},{"version":"CommandV1","origId":843068537729728,"guid":"d124b98e-ee86-49f9-849d-b0c56b33b684","subtype":"command","commandType":"auto","position":14.0,"command":"from pyspark.sql.functions import mean,countDistinct, avg, stddev, format_number\n","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514647317829,"submitTime":1514647317816,"finishTime":1514647317901,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2f0f5e3a-4b27-4ea7-bdad-d95f9420c235"},{"version":"CommandV1","origId":843068537729729,"guid":"54823302-bd00-4d03-a6dd-9a7ab672c5b5","subtype":"command","commandType":"auto","position":15.0,"command":"df.select([countDistinct('INSTNM').alias('Institutions Count'),format_number(avg('PCT_BORN_US'),2).alias('Average bonr in US'), format_number(stddev('PCT_WHITE'),2).alias('PTC WHITE')]).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------------------+------------------+---------+\n|Institutions Count|Average bonr in US|PTC WHITE|\n+------------------+------------------+---------+\n|                18|             95.80|    13.13|\n+------------------+------------------+---------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-843068537729729&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">1</span>\n<span class=\"ansiyellow\">    df.select([countDistinct(&apos;INSTNM&apos;).alias(&apos;Institutions Count&apos;),format_number(avg(&apos;PCT_BORN_US&apos;),2).alias(&apos;avarage bonr in US&apos;, stddev(&apos;PCT_WHITE&apos;)]).show()</span>\n<span class=\"ansigrey\">                                                                                                                                                      ^</span>\n<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax\n</div>","workflows":[],"startTime":1514646203692,"submitTime":1514646203685,"finishTime":1514646204418,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"136f26b0-a1e6-44e0-8a0a-3a25c08728ce"},{"version":"CommandV1","origId":843068537729730,"guid":"15c12c4b-e20d-4d99-9de0-f4fbe8b65626","subtype":"command","commandType":"auto","position":16.0,"command":"df[columns_].orderBy(df['PCT_BLACK'].desc()).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|101073|Concordia College...|0.18000000715255|39.2099990844726|            58.5|0.56000000238418|1.62000000476837|9.27999973297119|5.05999994277954|97.7799987792969|\n|100724|Alabama State Uni...|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139|4.09000015258789|11.8100004196167|6.76000022888183|94.5299987792968|\n|100654|Alabama A &amp; M Uni...|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348|3.78999996185302|            13.0| 6.8600001335144|94.7399978637695|\n|101028|Chattahoochee Val...|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185|2.85999989509582|9.61999988555908|5.46000003814697|94.8799972534179|\n|100830|Auburn University...|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|14.7200002670288|9.09000015258789|96.8499984741211|\n|101189| Faulkner University|0.62000000476837|64.8799972534179|31.8899993896484|1.04999995231628|1.80999994277954|14.5500001907348|7.84999990463257|96.5899963378906|\n|101116|South University-...|0.73000001907348|65.2200012207031|28.5599994659423|1.74000000953674| 6.6100001335144|14.6499996185302|7.84999990463257|91.0699996948242|\n|100663|University of Ala...|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185|2.02999997138977|15.9300003051757|8.55000019073486|            96.5|\n|100760|Central Alabama C...|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|7.96999979019165|4.55000019073486|98.8499984741211|\n|100690|  Amridge University|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302|6.94000005722046|13.2299995422363|7.01000022888183|94.0899963378906|\n|100751|The University of...|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371|2.41000008583068|16.4799995422363|9.21000003814697|96.0800018310547|\n|101143|Enterprise State ...|0.41999998688697|74.0800018310547|21.0499992370605|1.20000004768371|3.25999999046325| 11.369999885559|5.80000019073486|94.8000030517578|\n|101161|James H Faulkner ...|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651|1.55999994277954|12.5900001525878|            6.75|97.3300018310547|\n|100858|   Auburn University|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814|2.89000010490417|17.9300003051757|10.8199996948242|94.9199981689453|\n|100706|University of Ala...|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465|2.54999995231628|17.6700000762939|8.90999984741211|95.2699966430664|\n|100937|Birmingham Southe...|0.01999999955296|78.9000015258789|17.4099998474121|1.38999998569488|2.46000003814697|20.9099998474121|11.6700000762939|95.6900024414062|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">AttributeError</span>: &apos;DataFrame&apos; object has no attribute &apos;desc&apos;","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">AttributeError</span>                            Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729730&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">[</span>columns_<span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">.</span>orderBy<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;PCT_WHITE&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>desc<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansigreen\">/databricks/spark/python/pyspark/sql/dataframe.pyc</span> in <span class=\"ansicyan\">__getattr__</span><span class=\"ansiblue\">(self, name)</span>\n<span class=\"ansigreen\">   1041</span>         <span class=\"ansigreen\">if</span> name <span class=\"ansigreen\">not</span> <span class=\"ansigreen\">in</span> self<span class=\"ansiyellow\">.</span>columns<span class=\"ansiyellow\">:</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1042</span>             raise AttributeError(\n<span class=\"ansigreen\">-&gt; 1043</span><span class=\"ansiyellow\">                 &quot;&apos;%s&apos; object has no attribute &apos;%s&apos;&quot; % (self.__class__.__name__, name))\n</span><span class=\"ansigreen\">   1044</span>         jc <span class=\"ansiyellow\">=</span> self<span class=\"ansiyellow\">.</span>_jdf<span class=\"ansiyellow\">.</span>apply<span class=\"ansiyellow\">(</span>name<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">   1045</span>         <span class=\"ansigreen\">return</span> Column<span class=\"ansiyellow\">(</span>jc<span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">AttributeError</span>: &apos;DataFrame&apos; object has no attribute &apos;desc&apos;</div>","workflows":[],"startTime":1514646400468,"submitTime":1514646400458,"finishTime":1514646400743,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c23c6eb7-088d-47b9-b6cd-7d97b02fde0a"},{"version":"CommandV1","origId":843068537729731,"guid":"f1ab7371-5169-41b5-b5bd-4fcdefe74367","subtype":"command","commandType":"auto","position":17.0,"command":"#droping missing data\ndf[columns_].na.drop(thresh=2).show() # delect row with at least 2 null values\n#df[columns_].na.drop(how=['any','all','']).show() # delect row with at least 2 null values\ndf[columns_].na.drop(subset['INSTNM']).show() # delect row with at least 2 null values\n","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|100654|Alabama A &amp; M Uni...|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348|3.78999996185302|            13.0| 6.8600001335144|94.7399978637695|\n|100663|University of Ala...|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185|2.02999997138977|15.9300003051757|8.55000019073486|            96.5|\n|100690|  Amridge University|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302|6.94000005722046|13.2299995422363|7.01000022888183|94.0899963378906|\n|100706|University of Ala...|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465|2.54999995231628|17.6700000762939|8.90999984741211|95.2699966430664|\n|100724|Alabama State Uni...|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139|4.09000015258789|11.8100004196167|6.76000022888183|94.5299987792968|\n|100751|The University of...|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371|2.41000008583068|16.4799995422363|9.21000003814697|96.0800018310547|\n|100760|Central Alabama C...|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|7.96999979019165|4.55000019073486|98.8499984741211|\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n|100830|Auburn University...|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|14.7200002670288|9.09000015258789|96.8499984741211|\n|100858|   Auburn University|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814|2.89000010490417|17.9300003051757|10.8199996948242|94.9199981689453|\n|100937|Birmingham Southe...|0.01999999955296|78.9000015258789|17.4099998474121|1.38999998569488|2.46000003814697|20.9099998474121|11.6700000762939|95.6900024414062|\n|101028|Chattahoochee Val...|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185|2.85999989509582|9.61999988555908|5.46000003814697|94.8799972534179|\n|101073|Concordia College...|0.18000000715255|39.2099990844726|            58.5|0.56000000238418|1.62000000476837|9.27999973297119|5.05999994277954|97.7799987792969|\n|101116|South University-...|0.73000001907348|65.2200012207031|28.5599994659423|1.74000000953674| 6.6100001335144|14.6499996185302|7.84999990463257|91.0699996948242|\n|101143|Enterprise State ...|0.41999998688697|74.0800018310547|21.0499992370605|1.20000004768371|3.25999999046325| 11.369999885559|5.80000019073486|94.8000030517578|\n|101161|James H Faulkner ...|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651|1.55999994277954|12.5900001525878|            6.75|97.3300018310547|\n|101189| Faulkner University|0.62000000476837|64.8799972534179|31.8899993896484|1.04999995231628|1.80999994277954|14.5500001907348|7.84999990463257|96.5899963378906|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514646831262,"submitTime":1514646831253,"finishTime":1514646831537,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ec4e0714-debc-4939-9fb4-07e3049d8730"},{"version":"CommandV1","origId":843068537729732,"guid":"5743453a-9351-4f3d-93d9-fd48ce56b734","subtype":"command","commandType":"auto","position":18.0,"command":"df[columns_].na.fill('No Name Inst', subset=['INSTNM']).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|100654|Alabama A &amp; M Uni...|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348|3.78999996185302|            13.0| 6.8600001335144|94.7399978637695|\n|100663|University of Ala...|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185|2.02999997138977|15.9300003051757|8.55000019073486|            96.5|\n|100690|  Amridge University|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302|6.94000005722046|13.2299995422363|7.01000022888183|94.0899963378906|\n|100706|University of Ala...|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465|2.54999995231628|17.6700000762939|8.90999984741211|95.2699966430664|\n|100724|Alabama State Uni...|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139|4.09000015258789|11.8100004196167|6.76000022888183|94.5299987792968|\n|100751|The University of...|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371|2.41000008583068|16.4799995422363|9.21000003814697|96.0800018310547|\n|100760|Central Alabama C...|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|7.96999979019165|4.55000019073486|98.8499984741211|\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n|100830|Auburn University...|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|14.7200002670288|9.09000015258789|96.8499984741211|\n|100858|   Auburn University|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814|2.89000010490417|17.9300003051757|10.8199996948242|94.9199981689453|\n|100937|Birmingham Southe...|0.01999999955296|78.9000015258789|17.4099998474121|1.38999998569488|2.46000003814697|20.9099998474121|11.6700000762939|95.6900024414062|\n|101028|Chattahoochee Val...|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185|2.85999989509582|9.61999988555908|5.46000003814697|94.8799972534179|\n|101073|Concordia College...|0.18000000715255|39.2099990844726|            58.5|0.56000000238418|1.62000000476837|9.27999973297119|5.05999994277954|97.7799987792969|\n|101116|South University-...|0.73000001907348|65.2200012207031|28.5599994659423|1.74000000953674| 6.6100001335144|14.6499996185302|7.84999990463257|91.0699996948242|\n|101143|Enterprise State ...|0.41999998688697|74.0800018310547|21.0499992370605|1.20000004768371|3.25999999046325| 11.369999885559|5.80000019073486|94.8000030517578|\n|101161|James H Faulkner ...|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651|1.55999994277954|12.5900001525878|            6.75|97.3300018310547|\n|101189| Faulkner University|0.62000000476837|64.8799972534179|31.8899993896484|1.04999995231628|1.80999994277954|14.5500001907348|7.84999990463257|96.5899963378906|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">TypeError</span>: fill() takes at least 2 arguments (1 given)","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729732&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">----&gt; 1</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>na<span class=\"ansiyellow\">.</span>fill<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;No Name Inst&apos;</span><span class=\"ansiyellow\">,</span> subset<span class=\"ansiyellow\">=</span><span class=\"ansiyellow\">[</span><span class=\"ansiblue\">&apos;INSTNM&apos;</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">TypeError</span>: fill() takes at least 2 arguments (1 given)</div>","workflows":[],"startTime":1514647005930,"submitTime":1514647005918,"finishTime":1514647006455,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b03d0cd5-942b-4729-9728-981d660c9106"},{"version":"CommandV1","origId":843068537729733,"guid":"cb514591-3c52-4ba5-a8fd-0f8cd75ee8b4","subtype":"command","commandType":"auto","position":19.0,"command":"#df[columns_].na.fill()\nmean_pct_white = df.select([mean('PCT_WHITE')]).collect()[0][0]\nmean_pct_white\ndf[columns_].na.fill(mean_pct_white,subset=['PCT_WHITE']).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|UNITID|              INSTNM|         AGEGE24|       PCT_WHITE|       PCT_BLACK|       PCT_ASIAN|    PCT_HISPANIC|          PCT_BA|   PCT_GRAD_PROF|     PCT_BORN_US|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n|100654|Alabama A &amp; M Uni...|0.07999999821186|46.8400001525878|47.9799995422363|1.48000001907348|3.78999996185302|            13.0| 6.8600001335144|94.7399978637695|\n|100663|University of Ala...|0.25999999046325|69.0199966430664|27.7600002288818|1.10000002384185|2.02999997138977|15.9300003051757|8.55000019073486|            96.5|\n|100690|  Amridge University|0.82999998331069|70.8799972534179|22.5300006866455|1.28999996185302|6.94000005722046|13.2299995422363|7.01000022888183|94.0899963378906|\n|100706|University of Ala...|0.28999999165534|76.3799972534179|18.9799995422363|1.41999995708465|2.54999995231628|17.6700000762939|8.90999984741211|95.2699966430664|\n|100724|Alabama State Uni...|0.10999999940395|42.6899986267089|52.3199996948242|1.40999996662139|4.09000015258789|11.8100004196167|6.76000022888183|94.5299987792968|\n|100751|The University of...|0.10000000149011|75.3499984741211|21.0599994659423|1.20000004768371|2.41000008583068|16.4799995422363|9.21000003814697|96.0800018310547|\n|100760|Central Alabama C...|0.41999998688697|71.5100021362304|26.8999996185302| 0.2199999988079|1.00999999046325|7.96999979019165|4.55000019073486|98.8499984741211|\n|100812|Athens State Univ...|0.61000001430511|83.8899993896484|12.2600002288818|0.64999997615814|2.40000009536743|11.8900003433227|6.17000007629394|96.9599990844726|\n|100830|Auburn University...|0.31999999284744|59.9700012207031|37.2099990844726|0.91000002622604|1.62000000476837|14.7200002670288|9.09000015258789|96.8499984741211|\n|100858|   Auburn University|0.07000000029802|75.9000015258789|19.7999992370605|1.64999997615814|2.89000010490417|17.9300003051757|10.8199996948242|94.9199981689453|\n|100937|Birmingham Southe...|0.01999999955296|78.9000015258789|17.4099998474121|1.38999998569488|2.46000003814697|20.9099998474121|11.6700000762939|95.6900024414062|\n|101028|Chattahoochee Val...|0.43000000715255|57.5299987792968|38.6800003051757|0.85000002384185|2.85999989509582|9.61999988555908|5.46000003814697|94.8799972534179|\n|101073|Concordia College...|0.18000000715255|39.2099990844726|            58.5|0.56000000238418|1.62000000476837|9.27999973297119|5.05999994277954|97.7799987792969|\n|101116|South University-...|0.73000001907348|65.2200012207031|28.5599994659423|1.74000000953674| 6.6100001335144|14.6499996185302|7.84999990463257|91.0699996948242|\n|101143|Enterprise State ...|0.41999998688697|74.0800018310547|21.0499992370605|1.20000004768371|3.25999999046325| 11.369999885559|5.80000019073486|94.8000030517578|\n|101161|James H Faulkner ...|0.33000001311302|76.1699981689453|20.2999992370605|0.76999998092651|1.55999994277954|12.5900001525878|            6.75|97.3300018310547|\n|101189| Faulkner University|0.62000000476837|64.8799972534179|31.8899993896484|1.04999995231628|1.80999994277954|14.5500001907348|7.84999990463257|96.5899963378906|\n|101240|Gadsden State Com...|0.43999999761581|80.3899993896484| 16.829999923706|0.44999998807907|2.17000007629394|7.92999982833862|5.19999980926513|97.4700012207031|\n+------+--------------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+----------------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">NameError</span>: name &apos;mean&apos; is not defined","error":"<div class=\"ansiout\"><span class=\"ansired\">---------------------------------------------------------------------------</span>\n<span class=\"ansired\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansigreen\">&lt;command-843068537729733&gt;</span> in <span class=\"ansicyan\">&lt;module&gt;</span><span class=\"ansiblue\">()</span>\n<span class=\"ansigreen\">      1</span> <span class=\"ansired\">#df[columns_].na.fill()</span><span class=\"ansiyellow\"></span><span class=\"ansiyellow\"></span>\n<span class=\"ansigreen\">----&gt; 2</span><span class=\"ansiyellow\"> </span>df<span class=\"ansiyellow\">.</span>select<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">[</span>mean<span class=\"ansiyellow\">(</span><span class=\"ansiblue\">&apos;PCT_WHITE&apos;</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">]</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\">.</span>show<span class=\"ansiyellow\">(</span><span class=\"ansiyellow\">)</span><span class=\"ansiyellow\"></span>\n\n<span class=\"ansired\">NameError</span>: name &apos;mean&apos; is not defined</div>","workflows":[],"startTime":1514647447686,"submitTime":1514647447678,"finishTime":1514647448211,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f97d87d1-027c-40db-aeda-edaa41d5141a"},{"version":"CommandV1","origId":843068537729734,"guid":"da1012f7-fa9d-4370-ab1f-d06e022002df","subtype":"command","commandType":"auto","position":20.0,"command":"# timestamps\ndf = spark.read.csv(\"/FileStore/tables/appl_stock.csv\", header=True, inferSchema=True)\ncolumns = ['Date', 'Open', 'High', 'Low', 'Close', 'Volume', 'Adj Close']\nprint columns\ndf.select(columns).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">[&apos;Date&apos;, &apos;Open&apos;, &apos;High&apos;, &apos;Low&apos;, &apos;Close&apos;, &apos;Volume&apos;, &apos;Adj Close&apos;]\n+-------------------+------------------+------------------+------------------+------------------+---------+------------------+\n|               Date|              Open|              High|               Low|             Close|   Volume|         Adj Close|\n+-------------------+------------------+------------------+------------------+------------------+---------+------------------+\n|2010-01-04 00:00:00|        213.429998|        214.499996|212.38000099999996|        214.009998|123432400|         27.727039|\n|2010-01-05 00:00:00|        214.599998|        215.589994|        213.249994|        214.379993|150476200|27.774976000000002|\n|2010-01-06 00:00:00|        214.379993|            215.23|        210.750004|        210.969995|138040000|27.333178000000004|\n|2010-01-07 00:00:00|            211.75|        212.000006|        209.050005|            210.58|119282800|          27.28265|\n|2010-01-08 00:00:00|        210.299994|        212.000006|209.06000500000002|211.98000499999998|111902700|         27.464034|\n|2010-01-11 00:00:00|212.79999700000002|        213.000002|        208.450005|210.11000299999998|115557400|         27.221758|\n|2010-01-12 00:00:00|209.18999499999998|209.76999500000002|        206.419998|        207.720001|148614900|          26.91211|\n|2010-01-13 00:00:00|        207.870005|210.92999500000002|        204.099998|        210.650002|151473000|          27.29172|\n|2010-01-14 00:00:00|210.11000299999998|210.45999700000002|        209.020004|            209.43|108223500|         27.133657|\n|2010-01-15 00:00:00|210.92999500000002|211.59999700000003|        205.869999|            205.93|148516900|26.680197999999997|\n|2010-01-19 00:00:00|        208.330002|215.18999900000003|        207.240004|        215.039995|182501900|27.860484999999997|\n|2010-01-20 00:00:00|        214.910006|        215.549994|        209.500002|            211.73|153038200|         27.431644|\n|2010-01-21 00:00:00|        212.079994|213.30999599999998|        207.210003|        208.069996|152038600|         26.957455|\n|2010-01-22 00:00:00|206.78000600000001|        207.499996|            197.16|            197.75|220441900|         25.620401|\n|2010-01-25 00:00:00|202.51000200000001|        204.699999|        200.190002|        203.070002|266424900|26.309658000000002|\n|2010-01-26 00:00:00|205.95000100000001|        213.710005|        202.580004|        205.940001|466777500|         26.681494|\n|2010-01-27 00:00:00|        206.849995|            210.58|        199.530001|        207.880005|430642100|26.932840000000002|\n|2010-01-28 00:00:00|        204.930004|        205.500004|        198.699995|        199.289995|293375600|25.819922000000002|\n|2010-01-29 00:00:00|        201.079996|        202.199995|        190.250002|        192.060003|311488100|         24.883208|\n|2010-02-01 00:00:00|192.36999699999998|             196.0|191.29999899999999|        194.729998|187469100|         25.229131|\n+-------------------+------------------+------------------+------------------+------------------+---------+------------------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Open","nullable":true,"type":"double"},{"metadata":{},"name":"High","nullable":true,"type":"double"},{"metadata":{},"name":"Low","nullable":true,"type":"double"},{"metadata":{},"name":"Close","nullable":true,"type":"double"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514655635067,"submitTime":1514655635056,"finishTime":1514655635996,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"69a58a5c-49c9-41c7-87b0-448c010f7f29"},{"version":"CommandV1","origId":843068537729737,"guid":"aba98711-0e91-4d55-aef1-c2fab39f6886","subtype":"command","commandType":"auto","position":21.0,"command":"from pyspark.sql.functions import dayofmonth, hour, dayofyear, month,year, weekofyear, format_number, date_format","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514655753324,"submitTime":1514655753314,"finishTime":1514655753365,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"30f52cba-4bb0-48a4-95db-84a1f000c874"},{"version":"CommandV1","origId":843068537729738,"guid":"406975aa-e87a-4426-99bb-d9be5f480618","subtype":"command","commandType":"auto","position":22.0,"command":"columns = ['Date',\n          dayofmonth(df['Date']).alias('Day of Month'),\n          month(df['Date']).alias('Month'),\n          year(df['Date']).alias('Year'),\n          hour(df['Date']).alias('Hour'),\n          weekofyear(df['Date']).alias('Week of year')]\ndf.select(columns).show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+-------------------+------------+-----+----+----+------------+\n|               Date|Day of Month|Month|Year|Hour|Week of year|\n+-------------------+------------+-----+----+----+------------+\n|2010-01-04 00:00:00|           4|    1|2010|   0|           1|\n|2010-01-05 00:00:00|           5|    1|2010|   0|           1|\n|2010-01-06 00:00:00|           6|    1|2010|   0|           1|\n|2010-01-07 00:00:00|           7|    1|2010|   0|           1|\n|2010-01-08 00:00:00|           8|    1|2010|   0|           1|\n|2010-01-11 00:00:00|          11|    1|2010|   0|           2|\n|2010-01-12 00:00:00|          12|    1|2010|   0|           2|\n|2010-01-13 00:00:00|          13|    1|2010|   0|           2|\n|2010-01-14 00:00:00|          14|    1|2010|   0|           2|\n|2010-01-15 00:00:00|          15|    1|2010|   0|           2|\n|2010-01-19 00:00:00|          19|    1|2010|   0|           3|\n|2010-01-20 00:00:00|          20|    1|2010|   0|           3|\n|2010-01-21 00:00:00|          21|    1|2010|   0|           3|\n|2010-01-22 00:00:00|          22|    1|2010|   0|           3|\n|2010-01-25 00:00:00|          25|    1|2010|   0|           4|\n|2010-01-26 00:00:00|          26|    1|2010|   0|           4|\n|2010-01-27 00:00:00|          27|    1|2010|   0|           4|\n|2010-01-28 00:00:00|          28|    1|2010|   0|           4|\n|2010-01-29 00:00:00|          29|    1|2010|   0|           4|\n|2010-02-01 00:00:00|           1|    2|2010|   0|           5|\n+-------------------+------------+-----+----+----+------------+\nonly showing top 20 rows\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-843068537729738&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">1</span>\n<span class=\"ansiyellow\">    df.select([&apos;Date&apos;,dayofmonth(df[&apos;Date&apos;]).alias(&apos;Day of Month&apos;)).show()</span>\n<span class=\"ansigrey\">                                                                  ^</span>\n<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax\n</div>","workflows":[],"startTime":1514655994805,"submitTime":1514655994796,"finishTime":1514655995131,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c5e7fa1b-a2cf-402f-a5be-9bfc4f6a86d4"},{"version":"CommandV1","origId":843068537729739,"guid":"66d596f0-8d32-47b6-813e-d6465d71ab17","subtype":"command","commandType":"auto","position":23.0,"command":"df = df.withColumn('Year',year(df['Date']))","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"df","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Date","nullable":true,"type":"timestamp"},{"metadata":{},"name":"Open","nullable":true,"type":"double"},{"metadata":{},"name":"High","nullable":true,"type":"double"},{"metadata":{},"name":"Low","nullable":true,"type":"double"},{"metadata":{},"name":"Close","nullable":true,"type":"double"},{"metadata":{},"name":"Volume","nullable":true,"type":"integer"},{"metadata":{},"name":"Adj Close","nullable":true,"type":"double"},{"metadata":{},"name":"Year","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514656141370,"submitTime":1514656141353,"finishTime":1514656141446,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"23118713-00c6-4cca-9b56-cd6813f13ee1"},{"version":"CommandV1","origId":843068537729740,"guid":"fc3d664f-e9e3-4226-8d98-e644582c7900","subtype":"command","commandType":"auto","position":24.0,"command":"result = df.groupBy('Year').mean().select(['Year','avg(Open)','avg(Close)'])","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"result","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Year","nullable":true,"type":"integer"},{"metadata":{},"name":"avg(Open)","nullable":true,"type":"double"},{"metadata":{},"name":"avg(Close)","nullable":true,"type":"double"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":null,"error":null,"workflows":[],"startTime":1514656355654,"submitTime":1514656355641,"finishTime":1514656355782,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f7a1eaf4-450d-4263-aaa8-2977e6bf418c"},{"version":"CommandV1","origId":843068537729741,"guid":"926e371c-f17b-4088-8433-0e63ccaabf31","subtype":"command","commandType":"auto","position":25.0,"command":"result = result.withColumnRenamed('avg(Open)', 'Average Open')\nresult = result.withColumnRenamed('avg(Close)','Average Close')\nresult = result.withColumn('Pct Close', format_number(100 * (result['Average Close'] / result['Average Open'] - 1),3))\nresult.show()","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">+----+------------------+------------------+---------+\n|Year|      Average Open|     Average Close|Pct Close|\n+----+------------------+------------------+---------+\n|2015|120.17575393253965|120.03999980555547|   -0.113|\n|2013| 473.1281355634922| 472.6348802857143|   -0.104|\n|2014| 295.1426195357143| 295.4023416507935|    0.088|\n|2012|     576.652720788| 576.0497195640002|   -0.105|\n|2016|104.50777772619044|104.60400786904763|    0.092|\n|2010| 259.9576190992064| 259.8424600000002|   -0.044|\n|2011|364.06142773412705|364.00432532142867|   -0.016|\n+----+------------------+------------------+---------+\n\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[{"name":"result","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"Year","nullable":true,"type":"integer"},{"metadata":{},"name":"Average Open","nullable":true,"type":"double"},{"metadata":{},"name":"Average Close","nullable":true,"type":"double"},{"metadata":{},"name":"Pct Close","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null}]},"errorSummary":"<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax","error":"<div class=\"ansiout\"><span class=\"ansicyan\">  File </span><span class=\"ansigreen\">&quot;&lt;command-843068537729741&gt;&quot;</span><span class=\"ansicyan\">, line </span><span class=\"ansigreen\">3</span>\n<span class=\"ansiyellow\">    result result.withColumn(&apos;Pct Close&apos;, result[&apos;Average Close&apos;]/result[&apos;Average Open&apos;] - 1)</span>\n<span class=\"ansigrey\">                ^</span>\n<span class=\"ansired\">SyntaxError</span><span class=\"ansired\">:</span> invalid syntax\n</div>","workflows":[],"startTime":1514656789355,"submitTime":1514656789344,"finishTime":1514656790138,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"jrandson@gmail.com","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"e77477e5-21ae-40c6-84a6-b0d3c07fcdfe"},{"version":"CommandV1","origId":843068537729742,"guid":"c834116e-7b42-43ff-83c0-30c2a274521a","subtype":"command","commandType":"auto","position":26.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7bd8d198-97e8-402b-9860-381e657c1fa0"}],"dashboards":[],"guid":"db92dad4-1510-4ddf-9fdd-91ffaaa1f200","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}